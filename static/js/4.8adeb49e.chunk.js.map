{"version":3,"sources":["components/application/GenericTable/TablePlaceHolder.tsx","components/application/MuiTable/utils.js","components/application/MuiTable/MuiTable.tsx","components/application/GenericTable/VirtualTable.tsx","components/application/GenericTable/ExploreGridItem.tsx","components/application/GenericTable/ExploreGrid.tsx","components/application/GenericTable/VirtualList.tsx","components/application/GenericTable/GenericTable.tsx"],"names":["connect","state","ownProp","name","placeholder","table","primary","secondary","tab","props","renderPlaceholder","Typography","color","variant","style","padding","align","getDeterministicColumnWidth","column","tableWidth","width","percentageBasedWidth","percentAsString","parseFloat","percentToFixedWidth","Math","max","minWidth","useStyles","makeStyles","theme","boxSizing","backgroundColor","palette","grey","mode","borderBottom","divider","borderRight","text","fontSize","typography","pxToRem","display","outline","cell","alignItems","cellClickable","cursor","cellSelected","cellHovered","cellDisabled","opacity","cellContents","whiteSpace","overflow","textOverflow","cellHeader","fontWeight","fontWeightMedium","cellInLastColumn","paddingRight","spacing","cellInLastRow","footer","borderTop","dragHandle","flex","zIndex","DragHandleActive","DragHandleIcon","flexDirection","justifyContent","useCellRenderer","recomputeGridSize","columns","includeHeaders","data","columnWidth","isCellHovered","isCellSelected","isCellDisabled","classes","orderBy","orderDirection","onHeaderClick","onCellClick","onCellDoubleClick","onCellContextMenu","resizable","defaultCellProps","cellProps","React","useState","hoveredColumn","hoveredRowData","setHovered","Columns","widths","initialWidth","forEach","c","push","length","calculateWidths","setWidths","useEffect","resizableColumnWidths","useCallback","index","getColumnWidth","totalAllocatedWidth","reduce","result","variableWidthColumns","filter","initialDistributedWidthPerColumn","activeMinWidthColumns","allocatedMinWidth","remainingWidth","calcColumnWidth","resizeRow","dataKey","deltaX","prev","delta","findIndex","nextDataKey","handleDrag","event","handleMouse","e","cellRenderer","columnIndex","rowIndex","key","isHeader","rowData","isSelected","isDisabled","isHovered","resolveCellProps","cellStyle","undefined","contents","className","header","float","axis","defaultClassName","defaultClassNameDragging","onDrag","position","x","y","hasCellClick","hasCellDoubleClick","hasCellContextMenu","isClickable","onClick","classNames","TableCell","component","onMouseEnter","onMouseLeave","onDoubleClick","onContextMenu","TableSortLabel","active","direction","Fragment","MuiTable","height","maxHeight","pagination","fitHeightToRows","fixedRowCount","fixedColumnCount","rowHeight","Classes","other","useTheme","multiGrid","useRef","current","calculatedHeight","rowsPerPage","Array","isArray","paginationHeight","Number","mixins","toolbar","minHeight","calculatedHeightWithFooter","containerHeight","min","multiGridHeight","Table","ref","columnCount","enableFixedColumnScroll","rowCount","enableFixedRowScroll","classNameTopLeftGrid","classNameTopRightGrid","classNameBottomLeftGrid","classNameBottomRightGrid","TableFooter","TablePagination","gridStyle","border","sharedTableStyle","tableStyle","tableScrollStyle","light","borderRadius","layout","createStyles","tableRounded","borderBottomLeftRadius","borderBottomRightRadius","tableScroll","tableScrollRounded","common","white","main","checkbox","paddingLeft","checkboxIcon","selectedHeader","multiselectbarheight","marginBottom","contentrowspacing","collapse","background","getRowData","selectedRowIds","map","rid","find","d","id","row","defaultState","VirtualTable","tableRowHeight","rounded","hover","select","MultiSelectToolbar","showScroll","rowDivider","TableStore","tableUpdate","sortinjectedcolumns","evalFunc","sort","sortComparator","initialState","setState","itemtxt","adjustedheight","tabletoolbarheight","handleReset","Collapse","in","Grid","container","item","xs","zeroMinWidth","noWrap","alignContent","size","Checkbox","checkedIcon","indeterminateIcon","checked","onChange","prevState","indeterminate","some","root","textAlign","transition","transform","cardContent","paddingTop","paddingBottom","media","wrapper","fontFamily","h2","fontWeightBold","lineHeight","h3","body1","marginTop","ExploreGridItem","getAppName","company","getAppCompany","platforms","costs","androidLink","iosLink","androidStore","appleStore","webLink","icon","getAppIcon","created","updated","children","raised","handleChangeRoute","useHandleChangeRoute","content","isEmpty","description","Card","CardContent","publicUrl","app","from","onMouseOver","onMouseOut","elevation","CardMedia","image","alt","PlatformButtons","DialogButton","Icon","tooltip","join","dangerouslySetInnerHTML","__html","lineClamp","stripContent","getDayTimeFromTimestamp","ItemContainer","styled","div","ListContainer","ExploreGrid","GridItem","scrollElement","customScrollParent","totalCount","components","Item","List","ScrollSeekPlaceholder","itemContent","values","getValues","VirtualList","DynamicList","getClassName","handleRefresh","setCache","CellMeasurerCache","fixedWidth","cache","deferredMeasurementCache","overscanRowCount","rowRenderer","parent","measure","registerChild","tablefooterheight","hint","paper","GenericTable","selector","Data","Height","isList","isGrid","useSelector","VirtualComponent","Paper","TablePlaceHolder","Divider"],"mappings":"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","file":"static/js/4.8adeb49e.chunk.js","sourcesContent":["import * as React from 'react';\nimport { connect } from 'react-redux';\nimport { AppState } from '../../../store';\nimport { Typography } from '@mui/material';\n\nexport interface TablePlaceholderProps {\n  name?: string;\n  tab?: string;\n  placeholder?: string; //optional placeholder text\n  renderPlaceholder?: (props: TablePlaceholderProps) => React.Component;\n  primary?: string;\n  secondary?: string;\n  classes?: any;\n}\n\nconst TablePlaceholder = (props: TablePlaceholderProps) => {\n  const { primary, secondary, renderPlaceholder } = props;\n\n  return renderPlaceholder ? (\n    renderPlaceholder(props)\n  ) : (\n    <>\n      {primary && (\n        <Typography color='textSecondary' variant='subtitle1' style={{ padding: 16 }} align='center'>\n          {primary}\n        </Typography>\n      )}\n      {secondary && (\n        <Typography color='textSecondary' variant='body1' style={{ padding: 16 }} align='center'>\n          {secondary}\n        </Typography>\n      )}\n    </>\n  );\n};\n\nconst mapStateToProps = (state: AppState, ownProp: TablePlaceholderProps): TablePlaceholderProps => {\n  const { name, placeholder } = ownProp;\n  const table = state.table[name];\n  const primary = ownProp.primary || `No ${name}`;\n  const secondary = ownProp.secondary || placeholder;\n  return {\n    ...ownProp,\n    tab: table && table.tab && table.tab,\n    primary,\n    secondary\n  };\n};\n\nexport default connect(mapStateToProps)(TablePlaceholder as any) as any;\n","export function calcColumnWidth(index, columns, tableWidth) {\n  const column = columns[index];\n\n  let width = getDeterministicColumnWidth(column, tableWidth);\n\n  if (width) {\n    return width;\n  }\n\n  const totalAllocatedWidth = columns.reduce(\n    (result, c) => result + (getDeterministicColumnWidth(c, tableWidth) || 0),\n    0\n  );\n\n  // Evenly distribute remaining width amoungst columns (accounting for minWidths)\n  const variableWidthColumns = columns.filter(\n    c => typeof c.width !== 'number' && typeof c.width !== 'string'\n  );\n  const initialDistributedWidthPerColumn =\n    (tableWidth - totalAllocatedWidth) / variableWidthColumns.length;\n  const activeMinWidthColumns = variableWidthColumns.filter(\n    c => (c.minWidth > initialDistributedWidthPerColumn ? c.minWidth : 0)\n  );\n  const allocatedMinWidth = activeMinWidthColumns.reduce(\n    (result, c) => result + c.minWidth,\n    0\n  );\n  const remainingWidth = tableWidth - totalAllocatedWidth - allocatedMinWidth;\n\n  return Math.max(\n    column.minWidth || 0,\n    remainingWidth /\n      (variableWidthColumns.length - activeMinWidthColumns.length)\n  );\n}\n\nfunction getDeterministicColumnWidth(column, tableWidth) {\n  if (typeof column.width === 'number') {\n    // Fixed width\n    return column.width;\n  } else if (typeof column.width === 'string') {\n    // Percentage width\n    const percentageBasedWidth = percentToFixedWidth(column.width, tableWidth);\n    return Math.max(percentageBasedWidth, column.minWidth || 0);\n  } else {\n    // Variable width\n    return null;\n  }\n}\n\nfunction percentToFixedWidth(percentAsString, tableWidth) {\n  return (parseFloat(percentAsString) / 100) * tableWidth;\n}\n","import React from 'react';\nimport MultiGrid from 'react-virtualized/dist/commonjs/MultiGrid';\nimport classNames from 'classnames';\nimport Table from '@mui/material/Table';\nimport TableCell from '@mui/material/TableCell';\nimport TableFooter from '@mui/material/TableFooter';\nimport TablePagination from '@mui/material/TablePagination';\nimport TableSortLabel from '@mui/material/TableSortLabel';\nimport { useTheme } from '@mui/material/styles';\nimport { makeStyles } from '@mui/styles';\nimport Draggable from 'react-draggable';\nimport { calcColumnWidth } from './utils';\n\nconst FOOTER_BORDER_HEIGHT = 1;\n\nconst useStyles = makeStyles(theme => ({\n  table: {\n    boxSizing: 'border-box',\n\n    '& .topLeftGrid': {\n      backgroundColor: theme.palette.grey[theme.palette.mode === 'dark' ? 800 : 200],\n      borderBottom: `2px solid ${theme.palette.divider}`,\n      borderRight: `2px solid ${theme.palette.divider}`,\n      color: theme.palette.text.secondary,\n      fontSize: theme.typography.pxToRem(12),\n\n      // Hide scrollbars on Chrome/Safari/IE\n      '&::-webkit-scrollbar': {\n        display: 'none'\n      },\n      '-ms-overflow-style': 'none'\n    },\n\n    '& .topRightGrid': {\n      backgroundColor: theme.palette.grey[theme.palette.mode === 'dark' ? 800 : 200],\n      borderBottom: `2px solid ${theme.palette.divider}`,\n      color: theme.palette.text.secondary,\n      fontSize: theme.typography.pxToRem(12),\n\n      // Hide scrollbars on Chrome/Safari/IE\n      '&::-webkit-scrollbar': {\n        display: 'none'\n      },\n      '-ms-overflow-style': 'none'\n    },\n\n    '& .bottomLeftGrid': {\n      backgroundColor: theme.palette.grey[theme.palette.mode === 'dark' ? 800 : 200],\n      borderRight: `2px solid ${theme.palette.divider}`,\n      color: theme.palette.text.secondary,\n      fontSize: theme.typography.pxToRem(13),\n\n      // Hide scrollbars on Chrome/Safari/IE\n      '&::-webkit-scrollbar': {\n        display: 'none'\n      },\n      '-ms-overflow-style': 'none'\n    },\n\n    '& .bottomRightGrid': {\n      color: theme.palette.text.primary,\n      fontSize: theme.typography.pxToRem(13),\n      outline: 'none' // See: https://github.com/bvaughn/react-virtualized/issues/381\n    }\n  },\n  cell: {\n    boxSizing: 'border-box',\n    display: 'flex',\n    alignItems: 'center'\n  },\n  cellClickable: {\n    cursor: 'pointer'\n  },\n  cellSelected: {\n    backgroundColor: theme.palette.grey[theme.palette.mode === 'dark' ? 900 : 100]\n  },\n  cellHovered: {\n    backgroundColor: theme.palette.grey[theme.palette.mode === 'dark' ? 800 : 200]\n  },\n  cellDisabled: {\n    opacity: 0.5\n  },\n  cellContents: {\n    width: '100%',\n    whiteSpace: 'nowrap',\n    overflow: 'hidden',\n    textOverflow: 'ellipsis'\n  },\n  cellHeader: {\n    fontSize: theme.typography.pxToRem(12),\n    fontWeight: theme.typography.fontWeightMedium,\n    color: theme.palette.text.secondary\n  },\n  cellInLastColumn: {\n    paddingRight: theme.spacing(3)\n  },\n  cellInLastRow: {\n    borderBottom: 'none'\n  },\n  footer: {\n    borderTop: `${FOOTER_BORDER_HEIGHT}px solid ${theme.palette.divider}`\n  },\n  dragHandle: {\n    flex: '0 0 16px',\n    zIndex: 2,\n    cursor: 'col-resize',\n    color: '#0085ff'\n  },\n  DragHandleActive: {\n    color: '#0b6fcc',\n    zIndex: 3\n  },\n  DragHandleIcon: {\n    flex: '0 0 12px',\n    display: 'flex',\n    flexDirection: 'column',\n    justifyContent: 'center',\n    alignItems: 'center'\n  }\n}));\n\nconst calculateWidths = ({ resizable, columns: Columns }) => {\n  var widths = [];\n  if (resizable) {\n    var initialWidth = 1;\n    var columns = [];\n    Columns.forEach(c => {\n      if (c.width) {\n        widths[c.name] = 0.1;\n        initialWidth = initialWidth - 0.1;\n      } else {\n        columns.push(c);\n      }\n    });\n    columns.forEach(c => {\n      widths[c.name] = initialWidth / columns.length;\n    });\n  }\n  return widths;\n};\n\nconst useCellRenderer = ({\n  recomputeGridSize,\n  columns,\n  width,\n  includeHeaders,\n  data,\n  columnWidth,\n  isCellHovered,\n  isCellSelected,\n  isCellDisabled,\n  classes,\n  orderBy,\n  orderDirection,\n  onHeaderClick,\n  onCellClick,\n  onCellDoubleClick,\n  onCellContextMenu,\n  resizable,\n  cellProps: defaultCellProps\n}) => {\n  const [{ hoveredColumn, hoveredRowData }, setHovered] = React.useState({\n    hoveredColumn: null,\n    hoveredRowData: null\n  });\n\n  const [widths, setWidths] = React.useState(calculateWidths({ resizable, columns }));\n\n  React.useEffect(() => {\n    recomputeGridSize();\n  }, [recomputeGridSize, hoveredColumn, hoveredRowData, widths]);\n\n  const resizableColumnWidths = React.useCallback((index, columns, tableWidth) => widths[columns[index].name] * tableWidth, [widths]);\n\n  const getColumnWidth = React.useCallback(\n    ({ index }) =>\n      typeof columnWidth === 'function'\n        ? columnWidth({ index, columns, width })\n        : resizable\n        ? resizableColumnWidths(index, columns, width)\n        : calcColumnWidth(index, columns, width),\n    [columnWidth, resizable, columns, width, resizableColumnWidths]\n  );\n\n  const resizeRow = React.useCallback(\n    ({ dataKey, deltaX }) =>\n      setWidths(prev => {\n        const delta = deltaX / width;\n        const index = columns.findIndex(c => c.name === dataKey);\n        const nextDataKey = columns[index + 1].name;\n        return {\n          ...prev,\n          [dataKey]: prev[dataKey] + delta,\n          [nextDataKey]: prev[nextDataKey] - delta\n        };\n      }),\n    [setWidths, columns, width]\n  );\n\n  const handleDrag = React.useCallback(\n    dataKey =>\n      (event, { deltaX }) =>\n        resizeRow({\n          dataKey,\n          deltaX\n        }),\n    [resizeRow]\n  );\n\n  const handleMouse = React.useCallback(\n    (hoveredColumn, hoveredRowData) => e =>\n      setHovered({\n        hoveredColumn,\n        hoveredRowData\n      }),\n    [setHovered]\n  );\n\n  const cellRenderer = ({ columnIndex, rowIndex, key, style }) => {\n    const column = columns[columnIndex];\n    const isHeader = includeHeaders && rowIndex === 0;\n    const headerOffset = includeHeaders ? 1 : 0;\n    const rowData = (data && data[rowIndex - headerOffset]) || {};\n\n    const isSelected = isCellSelected && isCellSelected(column, rowData);\n    const isDisabled = isCellDisabled && isCellDisabled(column, rowData);\n\n    const isHovered = hoveredColumn && hoveredRowData && isCellHovered && isCellHovered(column, rowData, hoveredColumn, hoveredRowData);\n\n    const resolveCellProps = cellProps => (typeof cellProps === 'function' ? cellProps(column, rowData, hoveredColumn, hoveredRowData) : cellProps);\n    // TODO: Deep merge (do not override all defaultCellProps styles if column.cellProps.styles defined?)\n    const { style: cellStyle = undefined, ...cellProps } = {\n      ...resolveCellProps(defaultCellProps),\n      ...resolveCellProps(column.cellProps)\n    };\n\n    const contents = (\n      <div className={classes.cellContents}>\n        <span style={{ flex: 'auto' }}>\n          {isHeader ? (column.header != null ? column.header : column.name) : column.cell ? column.cell(rowData) : rowData[column.name]}\n        </span>\n        <span style={{ float: 'right' }}>\n          {isHeader && resizable && columnIndex < columns.length - 1 && (\n            <Draggable\n              axis='x'\n              defaultClassName={classes.dragHandle}\n              defaultClassNameDragging={classes.DragHandleActive}\n              onDrag={handleDrag(column.name)}\n              position={{ x: 0, y: undefined }}\n            >\n              <span className={classes.DragHandleIcon}>⋮</span>\n            </Draggable>\n          )}\n        </span>\n      </div>\n    );\n\n    const hasCellClick = !isHeader && onCellClick;\n    const hasCellDoubleClick = !isHeader && onCellDoubleClick;\n    const hasCellContextMenu = !isHeader && onCellContextMenu;\n    const isClickable = hasCellClick || hasCellDoubleClick || hasCellContextMenu || column.onClick;\n\n    const className = classNames(classes.cell, {\n      [classes.cellClickable]: isClickable,\n      [classes.cellHovered]: isHovered,\n      [classes.cellSelected]: isSelected,\n      [classes.cellDisabled]: isDisabled,\n      [classes.cellHeader]: isHeader,\n      [classes.cellInLastColumn]: columnIndex === columns.length - 1,\n      [classes.cellInLastRow]: !isHeader && rowIndex === (data ? data.length : 0)\n    });\n\n    return (\n      <TableCell\n        component='div'\n        className={className}\n        key={key}\n        onMouseEnter={handleMouse(column, rowData)}\n        onMouseLeave={handleMouse(null, null)}\n        style={{\n          ...style,\n          ...cellStyle\n        }}\n        {...(hasCellClick && {\n          onClick: event => onCellClick(event, { column, rowData, data })\n        })} // Can be overridden by cellProps.onClick on column definition\n        {...(hasCellDoubleClick && {\n          onDoubleClick: event => onCellDoubleClick(event, { column, rowData, data })\n        })} // Can be overridden by cellProps.onDoubleClick on column definition\n        {...(hasCellContextMenu && {\n          onContextMenu: event => onCellContextMenu(event, { column, rowData, data })\n        })} // Can be overridden by cellProps.onContextMenu on column definition\n        {...cellProps}\n      >\n        {isHeader && column.onHeaderClick !== false && (column.onHeaderClick || onHeaderClick) ? (\n          <TableSortLabel\n            active={orderBy && (orderBy === column.name || orderBy === column.orderBy) && rowIndex === 0}\n            style={{ width: 'inherit' }} // fix text overflowing\n            direction={orderDirection}\n            onClick={event => (column.onHeaderClick ? column.onHeaderClick(event, { column }) : onHeaderClick(event, { column }))}\n          >\n            {contents}\n          </TableSortLabel>\n        ) : isHeader && column.resizable ? (\n          <React.Fragment>\n            {contents}\n            <Draggable\n              axis='x'\n              defaultClassName='DragHandle'\n              defaultClassNameDragging='DragHandleActive'\n              onDrag={handleDrag(column.name)}\n              position={{ x: 0, y: undefined }}\n            >\n              <span className='DragHandleIcon'>⋮</span>\n            </Draggable>\n          </React.Fragment>\n        ) : (\n          contents\n        )}\n      </TableCell>\n    );\n  };\n\n  return { cellRenderer, columnWidth: getColumnWidth };\n};\n\nexport default function MuiTable({\n  data = [],\n  columns = [],\n  width = undefined,\n  height = undefined,\n  maxHeight = null,\n  pagination = undefined,\n  fitHeightToRows = undefined,\n  fixedRowCount = 0,\n  fixedColumnCount = 0,\n  rowHeight = 48,\n  style = undefined,\n  columnWidth = undefined,\n  includeHeaders = false,\n  isCellHovered = undefined,\n  isCellSelected = undefined,\n  isCellDisabled = undefined,\n  classes: Classes = undefined,\n  orderBy = undefined,\n  orderDirection = undefined,\n  onHeaderClick = undefined,\n  onCellClick = undefined,\n  onCellDoubleClick = undefined,\n  onCellContextMenu = undefined,\n  resizable = undefined,\n  cellProps = undefined,\n  ...other\n}) {\n  const classes = useStyles({ classes: Classes });\n  const theme = useTheme();\n\n  const multiGrid = React.useRef(null);\n\n  const recomputeGridSize = React.useCallback(() => multiGrid.current && multiGrid.current.recomputeGridSize(), [multiGrid]);\n\n  React.useEffect(() => {\n    recomputeGridSize();\n  }, [columns, data, height, width, recomputeGridSize]);\n\n  let calculatedHeight = 0;\n  if (height) {\n    calculatedHeight = height; // fixed height\n  } else if (pagination && pagination.rowsPerPage && !fitHeightToRows) {\n    const rowCount = pagination.rowsPerPage + (fixedRowCount ? fixedRowCount : includeHeaders ? 1 : 0);\n    calculatedHeight = rowCount * rowHeight;\n  } else if (Array.isArray(data)) {\n    const rowCount = data.length + (fixedRowCount ? fixedRowCount : includeHeaders ? 1 : 0);\n    calculatedHeight = rowCount * rowHeight;\n  }\n\n  const paginationHeight = Number(theme.mixins.toolbar.minHeight) + FOOTER_BORDER_HEIGHT;\n\n  const calculatedHeightWithFooter = calculatedHeight + (pagination ? paginationHeight : 0);\n  const containerHeight = maxHeight != null ? Math.min(calculatedHeightWithFooter, maxHeight) : calculatedHeightWithFooter;\n  const multiGridHeight = containerHeight - (pagination ? paginationHeight : 0);\n\n  return (\n    <Table component='div' style={{ width, height: containerHeight, ...style }} className={classes.table} {...other}>\n      <MultiGrid\n        {...useCellRenderer({\n          recomputeGridSize,\n          data,\n          columns,\n          width,\n          classes,\n          includeHeaders,\n          columnWidth,\n          isCellHovered,\n          isCellSelected,\n          isCellDisabled,\n          orderBy,\n          orderDirection,\n          onHeaderClick,\n          onCellClick,\n          onCellDoubleClick,\n          onCellContextMenu,\n          resizable,\n          cellProps\n        })}\n        ref={multiGrid}\n        width={width}\n        columnCount={Array.isArray(columns) ? columns.length : 0}\n        fixedColumnCount={fixedColumnCount}\n        enableFixedColumnScroll={fixedColumnCount > 0}\n        height={multiGridHeight}\n        rowHeight={rowHeight}\n        rowCount={Array.isArray(data) ? data.length + (includeHeaders ? 1 : 0) : 0}\n        fixedRowCount={fixedRowCount}\n        enableFixedRowScroll={fixedRowCount > 0}\n        // TODO: Read these from `classes` without classes.table inheritance?  How to pass props.classes down to override?\n        classNameTopLeftGrid={'topLeftGrid'}\n        classNameTopRightGrid={'topRightGrid'}\n        classNameBottomLeftGrid={'bottomLeftGrid'}\n        classNameBottomRightGrid={'bottomRightGrid'}\n      />\n      {pagination && (\n        <TableFooter component='div' className={classes.footer}>\n          <TablePagination component='div' {...pagination} />\n        </TableFooter>\n      )}\n    </Table>\n  );\n}\n","import * as React from 'react';\nimport * as Icons from '@mui/icons-material';\nimport { useTheme, Typography, Collapse, Checkbox, Grid } from '@mui/material';\nimport makeStyles from '@mui/styles/makeStyles';\nimport createStyles from '@mui/styles/createStyles';\nimport MuiTable from '../MuiTable/MuiTable';\nimport AutoSizer from 'react-virtualized/dist/commonjs/AutoSizer';\nimport Component from '@reactions/component';\nimport classNames from 'classnames';\nimport * as TableStore from './store';\nimport { SortComparator } from './helpers';\nimport { evalFunc } from '../../../helpers';\n\nexport interface VirtualTableProps {\n  name?: string;\n  height?: number;\n  checkbox?: boolean;\n  hover?: boolean;\n  onCellClick?: (event, props) => any;\n  onHeaderClick?: (event, props) => any;\n  isCellHovered?: (column, rowData, hoveredColumn, hoveredRowData) => boolean;\n  select?: boolean;\n  columns?: any[] | ((props?) => any[]);\n  data?: any[];\n  MultiSelectToolbar?: any;\n  rounded?: boolean;\n  rowHeight?: number;\n  includeHeaders?: boolean;\n  fixedRowCount?: number;\n  fixedColumnCount?: number;\n  showScroll?: boolean;\n  rowDivider?: boolean;\n}\n\nconst gridStyle = {\n  border: 0,\n  'scrollbar-width': 'none' /* Firefox 64 */\n};\n\nconst sharedTableStyle = {\n  border: 0,\n  '& .topLeftGrid': gridStyle,\n  '& .topRightGrid': gridStyle,\n  '& .bottomLeftGrid': gridStyle\n};\n\nconst tableStyle = {\n  ...sharedTableStyle,\n  '& .bottomRightGrid': {\n    border: 0,\n    // Hide scrollbars on Chrome/Safari/IE\n    '&::-webkit-scrollbar': {\n      display: 'none'\n    },\n    'scrollbar-width': 'none' /* Firefox 64 */,\n    '-ms-overflow-style': 'none' as any,\n    '-webkit-overflow-scrolling': 'auto',\n    '&::-webkit-overflow-scrolling': 'auto'\n  }\n};\n\nexport const tableScrollStyle = ({ palette }) => ({\n  ...sharedTableStyle,\n  '& .bottomRightGrid': {\n    '&::-webkit-scrollbar': {\n      display: 'auto',\n      width: 6,\n      height: 6\n    },\n    '&::-webkit-scrollbar-thumb': {\n      // Works on chrome only\n      backgroundColor: palette.primary.light,\n      borderRadius: 25\n    },\n    border: 0,\n    '-ms-overflow-style': 'none' as any,\n    '-webkit-overflow-scrolling': 'auto',\n    '&::-webkit-overflow-scrolling': 'auto'\n  }\n});\n\nconst useStyles = makeStyles(({ palette, spacing, layout }: any) =>\n  createStyles({\n    table: {\n      ...tableStyle\n    },\n    tableRounded: {\n      borderBottomLeftRadius: 12,\n      borderBottomRightRadius: 12,\n      ...tableStyle\n    },\n    tableScroll: {\n      ...tableScrollStyle({ palette })\n    },\n    tableScrollRounded: {\n      borderBottomLeftRadius: 12,\n      borderBottomRightRadius: 12,\n      ...tableScrollStyle({ palette })\n    },\n    cellHovered: {\n      backgroundColor: palette.primary.light\n    },\n    cellSelected: {\n      color: palette.common.white + ' !important',\n      backgroundColor: palette.primary.main\n    },\n    checkbox: {\n      paddingLeft: 0,\n      paddingRight: 0\n    },\n    checkboxIcon: {\n      backgroundColor: palette.common.white\n    },\n    selectedHeader: {\n      paddingLeft: spacing(1),\n      //paddingRight: spacing(1),\n      color: palette.common.white,\n      backgroundColor: palette.primary.main,\n      height: layout.multiselectbarheight,\n      marginBottom: layout.contentrowspacing\n    },\n    cell: {\n      //color: palette.secondary.main,\n    },\n    collapse: {\n      background: palette.grey[400]\n    }\n  })\n);\n\n//If a row data function exists, it returns the results of that, otherwise just the row id\nexport function getRowData(selectedRowIds, data) {\n  return selectedRowIds\n    .map(rid => data.find(d => d.id === rid))\n    .filter(row => row)\n    .map(row => (row.getRowData ? { ...row.getRowData(row) } : { id: row.id }));\n}\n\nconst defaultState = { selectedRowIds: [] };\n\nexport default function VirtualTable(props: VirtualTableProps) {\n  const classes = useStyles(props);\n  const { layout } = useTheme() as any;\n  const {\n    name,\n    includeHeaders = true,\n    fixedRowCount = 1,\n    fixedColumnCount = 0,\n    rowHeight = layout.tableRowHeight,\n    rounded = false,\n    hover,\n    onCellClick = undefined,\n    onHeaderClick = undefined,\n    isCellHovered = undefined,\n    select,\n    checkbox,\n    data,\n    height,\n    columns,\n    MultiSelectToolbar,\n    showScroll = false,\n    rowDivider = true\n  } = props;\n\n  const table: TableStore.Table = TableStore.useTable(name);\n  const tableUpdate = TableStore.useTableUpdate();\n\n  const handleSort = (column, sort: SortComparator) => {\n    table &&\n      tableUpdate({\n        id: table.id,\n        orderBy: column,\n        orderDirection: table.orderDirection === 'asc' ? 'desc' : 'asc',\n        sortComparator: sort\n      });\n  };\n\n  const sortinjectedcolumns = evalFunc(columns, props).map(c => ({\n    ...c,\n    onHeaderClick: c.sort\n      ? (event, props) => {\n          handleSort(c.name, c.sort);\n          onHeaderClick && onHeaderClick(event, props);\n        }\n      : onHeaderClick\n  })); //;== true && handleSort() }));\n  return (\n    <div style={{ height: height }}>\n      <Component initialState={defaultState}>\n        {({ state, setState }) => {\n          const selectedRowIds = state.selectedRowIds;\n          const length = selectedRowIds.length;\n          const itemtxt = length === 0 ? '' : length === 1 ? length + ' item' : length + ' items';\n          const adjustedheight = length > 0 ? height - layout.tabletoolbarheight - layout.contentrowspacing : height;\n          const handleReset = () => setState(defaultState);\n          return (\n            <AutoSizer>\n              {({ width }) => (\n                <>\n                  <div style={{ width: width }}>\n                    <Collapse className={classes.collapse} in={length > 0}>\n                      <Grid className={classes.selectedHeader} container direction='row' justifyContent='space-between' alignItems='center' spacing={0}>\n                        <Grid item xs zeroMinWidth>\n                          <Typography noWrap color='inherit' variant='h5'>\n                            {itemtxt}\n                          </Typography>\n                        </Grid>\n                        <Grid item xs>\n                          <Grid container justifyContent='flex-end' alignItems='center' alignContent='center'>\n                            <Grid item>\n                              {length > 0 && MultiSelectToolbar && <MultiSelectToolbar handleReset={handleReset} rowData={getRowData(selectedRowIds, data)} />}\n                            </Grid>\n                          </Grid>\n                        </Grid>\n                      </Grid>\n                    </Collapse>\n                  </div>\n                  <MuiTable\n                    cellProps={{\n                      size: 'small',\n                      style: { paddingLeft: 16, paddingRight: 0, borderBottom: rowDivider === false ? 0 : undefined }\n                    }}\n                    classes={{\n                      table: showScroll\n                        ? classNames(classes.tableScroll, rounded && classes.tableScrollRounded)\n                        : classNames(classes.table, rounded && classes.tableRounded),\n                      cellHovered: classes.cellHovered,\n                      cellSelected: classes.cellSelected,\n                      cell: classes.cell\n                    }}\n                    fixedRowCount={fixedRowCount}\n                    fixedColumnCount={fixedColumnCount}\n                    width={width}\n                    height={adjustedheight}\n                    rowHeight={rowHeight}\n                    includeHeaders={includeHeaders}\n                    orderBy={table && table.orderBy}\n                    orderDirection={table ? table.orderDirection : 'asc'}\n                    data={data}\n                    columns={\n                      checkbox\n                        ? [\n                            {\n                              name: 'checkbox',\n                              header: (\n                                <Checkbox\n                                  checkedIcon={<Icons.CheckBox className={classes.checkboxIcon} color='primary' />}\n                                  indeterminateIcon={<Icons.IndeterminateCheckBox className={classes.checkboxIcon} color='primary' />}\n                                  checked={state.selectedRowIds.filter(rid => data.find(d => d.id === rid)).length > 0}\n                                  onChange={e =>\n                                    setState(prevState => {\n                                      if (prevState.selectedRowIds.filter(rid => data.find(d => d.id === rid)).length === data.length) {\n                                        // deselect all\n                                        return { selectedRowIds: [] };\n                                      } else {\n                                        // select all\n                                        return {\n                                          selectedRowIds: data.map(d => d.id)\n                                        };\n                                      }\n                                    })\n                                  }\n                                  {...(state.selectedRowIds.filter(rid => data.find(d => d.id === rid)).length > 0 &&\n                                    state.selectedRowIds.filter(rid => data.find(d => d.id === rid)).length !== data.length && {\n                                      indeterminate: true,\n                                      color: 'default'\n                                    })}\n                                />\n                              ),\n                              cell: rowData => (\n                                <Checkbox\n                                  checkedIcon={<Icons.CheckBox className={classes.checkboxIcon} color='primary' />}\n                                  checked={state.selectedRowIds.filter(rid => data.find(d => d.id === rid)).some(id => rowData.id === id)}\n                                />\n                              ),\n                              cellProps: {\n                                style: { paddingLeft: 8, paddingRight: 0 }\n                              },\n                              width: 48\n                            },\n                            ...sortinjectedcolumns\n                          ]\n                        : sortinjectedcolumns\n                    }\n                    isCellSelected={select ? (column, rowData) => state.selectedRowIds.some(id => rowData && rowData.id === id) : undefined}\n                    isCellHovered={\n                      isCellHovered || hover\n                        ? (column, rowData, hoveredColumn, hoveredRowData) =>\n                            isCellHovered\n                              ? isCellHovered(column, rowData, hoveredColumn, hoveredRowData)\n                              : rowData && rowData.id && rowData.id === hoveredRowData.id\n                        : undefined\n                    }\n                    onHeaderClick={onHeaderClick}\n                    onCellClick={\n                      onCellClick\n                        ? onCellClick\n                        : select\n                        ? (event, { column, rowData }) => {\n                            setState(prevState => {\n                              if (prevState.selectedRowIds.some(id => rowData.id === id)) {\n                                // remove\n                                return {\n                                  selectedRowIds: prevState.selectedRowIds.filter(id => id !== rowData.id)\n                                };\n                              } else {\n                                // add\n                                return {\n                                  selectedRowIds: [...prevState.selectedRowIds, rowData.id]\n                                };\n                              }\n                            });\n                          }\n                        : undefined\n                    }\n                    style={{ backgroundColor: 'white' }}\n                  />\n                </>\n              )}\n            </AutoSizer>\n          );\n        }}\n      </Component>\n    </div>\n  );\n}\n","import * as React from 'react';\nimport { Card, CardContent, CardMedia, Grid, Typography } from '@mui/material';\nimport createStyles from '@mui/styles/createStyles';\nimport makeStyles from '@mui/styles/makeStyles';\nimport { getDayTimeFromTimestamp, isEmpty, lineClamp, publicUrl, stripContent } from '../../../helpers';\nimport { useHandleChangeRoute } from '../../layout/hooks';\nimport { getAppCompany, getAppIcon, getAppName } from './Applications/selectors';\nimport PlatformButtons from './ApplicationsSummary/PlatformButtons';\nimport DialogButton from '../GenericDialog/DialogButton';\n\nconst height = 520;\nconst useStyles = makeStyles((theme: any) =>\n  createStyles({\n    root: {\n      flex: '1',\n      textAlign: 'center',\n      height,\n      borderRadius: 10,\n      transition: 'transform 0.15s ease-in-out',\n      '&:hover': {\n        transform: 'scale3d(1.025, 1.025, 1)'\n      },\n      cursor: 'pointer'\n    },\n    cardContent: {\n      paddingTop: 8,\n      paddingBottom: 0\n    },\n    media: {\n      borderBottom: `1px solid ${theme.palette.grey[400]}`\n    },\n    wrapper: {\n      height: height - 200,\n      overflow: 'hidden',\n      color: theme.palette.text.primary,\n      fontFamily: theme.typography.fontFamily,\n      '& h2': {\n        fontSize: theme.typography.h2.fontSize,\n        fontWeight: theme.typography.fontWeightBold,\n        lineHeight: theme.typography.h2.lineHeight,\n        marginBottom: theme.spacing(3)\n      },\n      '& h3': {\n        fontSize: theme.typography.h3.fontSize,\n        fontWeight: theme.typography.fontWeightBold,\n        lineHeight: theme.typography.h3.lineHeight,\n        marginBottom: theme.spacing(3)\n      },\n      '& p': {\n        fontSize: theme.typography.body1.fontSize,\n        lineHeight: theme.typography.body1.lineHeight,\n        marginBottom: 8,\n        marginTop: 8\n      },\n      '& li': {\n        fontSize: theme.typography.body1.fontSize,\n        lineHeight: theme.typography.body1.lineHeight,\n        marginBottom: theme.spacing(1)\n      }\n    }\n  })\n);\n\nexport default function ExploreGridItem(props: any) {\n  const {\n    name = getAppName(props),\n    company = getAppCompany(props),\n    platforms = [],\n    costs = [],\n    androidLink,\n    iosLink,\n    androidStore,\n    appleStore,\n    webLink,\n    icon = getAppIcon(props),\n    created,\n    updated,\n    children = undefined\n  } = props;\n\n  const [state, setState] = React.useState({\n    raised: false\n  });\n\n  const classes = useStyles();\n  const handleChangeRoute = useHandleChangeRoute();\n\n  const content = !isEmpty(appleStore?.description) ? appleStore.description : androidStore?.description;\n\n  return children ? (\n    <Card className={classes.root}>\n      <CardContent>{children}</CardContent>\n    </Card>\n  ) : (\n    <Card\n      onClick={handleChangeRoute(publicUrl('/ViewApp'), { app: props, from: 'ApplicationSummary' })}\n      className={classes.root}\n      onMouseOver={() => setState({ raised: true })}\n      onMouseOut={() => setState({ raised: false })}\n      raised={state.raised}\n      elevation={state.raised ? 8 : 4}\n    >\n      <CardMedia className={classes.media} image={icon} component='img' height='200' width='100%' alt='cover image' />\n      <CardContent className={classes.cardContent}>\n        <Grid container>\n          <Grid item xs={12}>\n            <Grid container>\n              <Grid item xs={12}>\n                <Typography variant='h5' noWrap>\n                  {name || 'Unknown Name'}\n                </Typography>\n              </Grid>\n              <Grid item xs={12}>\n                <Typography color='textSecondary' noWrap>\n                  {company}\n                </Typography>\n              </Grid>\n              <Grid item xs={12}>\n                <Grid container justifyContent='center' spacing={0}>\n                  <Grid item>\n                    <PlatformButtons platforms={platforms} androidLink={androidLink} iosLink={iosLink} webLink={webLink} />\n                  </Grid>\n                  <Grid item xs={12}>\n                    <Typography noWrap color='textSecondary' variant='caption'>\n                      {costs.length === 0 ? (\n                        'Unknown Cost'\n                      ) : costs.length > 2 ? (\n                        <DialogButton variant='link' size='small' Icon={null} tooltip={costs.join(' | ')}>\n                          Multiple Associated Costs\n                        </DialogButton>\n                      ) : (\n                        costs.join(' | ')\n                      )}\n                    </Typography>\n                  </Grid>\n                </Grid>\n              </Grid>\n            </Grid>\n          </Grid>\n        </Grid>\n        <div className={classes.wrapper}>\n          <div dangerouslySetInnerHTML={{ __html: lineClamp(stripContent(content), 7) }} />\n          <Grid container style={{ marginTop: 4 }}>\n            <Grid item xs={12}>\n              <Typography noWrap display='block' align='right' color='textSecondary' variant='caption'>\n                Last Rating: {updated ? getDayTimeFromTimestamp(updated) : created ? getDayTimeFromTimestamp(created) : ''}\n              </Typography>\n            </Grid>\n          </Grid>\n        </div>\n      </CardContent>\n    </Card>\n  );\n}\n","import ExploreGridItem from './ExploreGridItem';\nimport {VirtuosoGrid} from 'react-virtuoso'\nimport styled from '@emotion/styled';\n\nconst ItemContainer = styled.div`\n  padding: 0.5rem;\n  width: 25%;\n  display: flex;\n  flex: none;\n  align-content: stretch;\n\n  @media (max-width: 1300px) {\n    width: 33%;\n  }\n\n  @media (max-width: 1200px) {\n    width: 50%;\n  }\n\n  @media (max-width: 550px) {\n    width: 100%;\n  }\n`;\n\nconst ListContainer = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n`;\n\nexport default function ExploreGrid({ data, height, GridItem = ExploreGridItem, scrollElement = undefined }) {  \n  return (\n    <VirtuosoGrid\n      customScrollParent={scrollElement}\n      totalCount={data.length}\n      style={{ height: scrollElement ? undefined : height }}\n      components={{\n        Item: ItemContainer,\n        List: ListContainer as any,\n        ScrollSeekPlaceholder: ({ height, width, index }) => (\n          <ItemContainer>\n            <ExploreGridItem>--</ExploreGridItem>\n          </ItemContainer>\n        )\n      }}\n      itemContent={index => {\n        const item = data[index] ?? {};\n        const values = item.getValues ? item.getValues() : item;        \n        return values && <GridItem index={index} {...values} />;\n      }}\n      /*scrollSeekConfiguration={{\n        enter: velocity => Math.abs(velocity) > 1200,\n        exit: velocity => Math.abs(velocity) < 30\n        // change: (_, range) => console.log({ range })\n      }}\n      */\n    />\n  );\n}\n","import * as React from 'react';\nimport { useTheme } from '@mui/material';\nimport AutoSizer from 'react-virtualized/dist/commonjs/AutoSizer';\nimport Component from '@reactions/component';\nimport { evalFunc } from '../../../helpers';\nimport { CellMeasurer, CellMeasurerCache, List } from 'react-virtualized';\n\nexport interface VirtualListProps {\n  name?: string;\n  height?: number;\n  columns?: any[] | ((props?) => any[]);\n  data?: any[];\n  rowHeight?: number;\n}\n\nexport default function VirtualList(props: VirtualListProps) {\n  const { layout } = useTheme() as any;\n  const { rowHeight = layout.tableRowHeight, data, columns, height } = props;\n\n  const sortinjectedcolumns = evalFunc(columns, props);\n\n  return (\n    <div style={{ height: height }}>\n      <Component initialState={{ selectedRowIds: [] }}>\n        {({ state }) => {\n          const selectedRowIds = state.selectedRowIds;\n          const length = selectedRowIds.length;\n          const adjustedheight = length > 0 ? height - layout.multiselectbarheight - layout.contentrowspacing : height;\n          return (\n            <AutoSizer>\n              {({ width }) => <DynamicList data={data} rowHeight={rowHeight} width={width as any} height={adjustedheight} columns={sortinjectedcolumns} />}\n            </AutoSizer>\n          );\n        }}\n      </Component>\n    </div>\n  );\n}\n\nconst DynamicList = props => {\n  const { height, width, data, columns, rowHeight = 50, getClassName } = props as any;\n\n  const handleRefresh = () => {\n    setCache(\n      new CellMeasurerCache({\n        fixedWidth: true,\n        minHeight: rowHeight\n      })\n    );\n  };\n\n  React.useEffect(() => {\n    setCache(\n      new CellMeasurerCache({\n        fixedWidth: true,\n        minHeight: rowHeight\n      })\n    );\n  }, [data, columns, getClassName, height, rowHeight, width]);\n\n  const [cache, setCache] = React.useState(\n    new CellMeasurerCache({\n      fixedWidth: true,\n      minHeight: props.rowHeight ?? 50\n    })\n  );\n\n  const _rowRenderer = ({ index, key, parent, style }) => {\n    const classNames = getClassName && getClassName({ columnIndex: 0, rowIndex: index });\n    return (\n      <CellMeasurer cache={cache} columnIndex={0} key={key} rowIndex={index} parent={parent}>\n        {({ measure, registerChild }) => (\n          <div ref={registerChild} className={classNames} style={style}>\n            {columns[0].cell({ ...data[index], handleRefresh }, columns[0])}\n          </div>\n        )}\n      </CellMeasurer>\n    );\n  };\n\n  return (\n    <List\n      deferredMeasurementCache={cache}\n      height={height}\n      overscanRowCount={0}\n      rowCount={data.length}\n      rowHeight={cache.rowHeight}\n      rowRenderer={_rowRenderer}\n      width={width}\n    />\n  );\n};\n","import * as React from 'react';\nimport { useSelector } from 'react-redux';\nimport { AppState } from '../../../store';\nimport TablePlaceHolder from './TablePlaceHolder';\nimport VirtualTable, { VirtualTableProps } from './VirtualTable';\nimport { Typography, Divider, useTheme, Paper, Grid } from '@mui/material';\nimport makeStyles from '@mui/styles/makeStyles';\nimport createStyles from '@mui/styles/createStyles';\nimport ExploreGrid from './ExploreGrid';\nimport VirtualList from './VirtualList';\n\nexport interface GenericTableProps extends VirtualTableProps {\n  footer?: boolean;\n  elevation?: number;\n  placeholder?: string | React.ReactNode;\n  selector?(state, props): [];\n  length?: number;\n  isGrid?: boolean;\n  isList?: boolean;\n}\n\nconst useStyles = makeStyles(({ palette, spacing, layout }: any) =>\n  createStyles({\n    placeholder: {\n      padding: spacing(1),\n      background: palette.grey[50]\n    },\n    footer: {\n      paddingRight: spacing(1),\n      background: palette.grey[200],\n      border: 8,\n      height: layout.tablefooterheight,\n      color: palette.text.hint\n    },\n    paper: ({ rounded }: any) => ({\n      borderBottomLeftRadius: rounded ? 4 : 0,\n      borderBottomRightRadius: rounded ? 4 : 0\n    })\n  })\n);\n\nexport default function GenericTable(props: GenericTableProps) {\n  const { elevation = 4, placeholder, footer, name, selector, data: Data = [], height: Height, isList, isGrid, ...other } = props;\n  const classes = useStyles(props);\n  const { layout } = useTheme() as any;\n  const data = useSelector((state: AppState) => (selector ? selector(state, props) : Data));\n  const length = data && data.length ? data.length : 0;\n  const height = footer ? (Height ? Height - layout.tablefooterheight : Height) : Height;\n\n  const VirtualComponent = isList ? VirtualList : isGrid ? ExploreGrid : VirtualTable;\n\n  return (\n    <Paper elevation={elevation} className={classes.paper}>\n      {length === 0 ? (\n        <Grid style={{ height: height }} container className={classes.placeholder} alignItems='center' justifyContent='center'>\n          <Grid item xs>\n            <TablePlaceHolder {...props} />\n          </Grid>\n          <Grid item xs={12} />\n        </Grid>\n      ) : (\n        <VirtualComponent name={name} data={data} height={height} {...other} />\n      )}\n      {footer && (\n        <>\n          <Divider />\n          <Grid container className={classes.footer} alignContent='center' alignItems='center' justifyContent='flex-end'>\n            <Grid item container alignItems='center' justifyContent='flex-end'>\n              <Typography align='right' variant='caption'>\n                Viewing {length} {name}\n              </Typography>\n            </Grid>\n          </Grid>\n        </>\n      )}\n    </Paper>\n  );\n}\n"],"sourceRoot":""}