{"version":3,"sources":["components/application/GenericTable/TablePlaceHolder.tsx","components/application/GenericTable/VirtualTable.tsx","components/application/GenericTable/VirtualList.tsx","components/application/GenericTable/GenericTable.tsx"],"names":["connect","state","ownProp","name","placeholder","table","primary","secondary","tab","props","renderPlaceholder","Typography","color","variant","style","padding","align","gridStyle","border","sharedTableStyle","tableStyle","display","tableScrollStyle","palette","width","height","backgroundColor","light","borderRadius","useStyles","makeStyles","spacing","layout","createStyles","tableRounded","borderBottomLeftRadius","borderBottomRightRadius","tableScroll","tableScrollRounded","cellHovered","cellSelected","common","white","main","checkbox","paddingLeft","paddingRight","checkboxIcon","selectedHeader","multiselectbarheight","marginBottom","contentrowspacing","cell","collapse","background","grey","getRowData","selectedRowIds","data","map","rid","find","d","id","filter","row","VirtualTable","classes","useTheme","includeHeaders","fixedRowCount","rowHeight","tableRowHeight","rounded","hover","onCellClick","undefined","onHeaderClick","isCellHovered","select","columns","MultiSelectToolbar","showScroll","rowDivider","TableStore","tableUpdate","sortinjectedcolumns","evalFunc","c","sort","event","column","orderBy","orderDirection","sortComparator","initialState","setState","length","itemtxt","adjustedheight","Collapse","className","in","Grid","container","direction","justify","alignItems","item","xs","zeroMinWidth","noWrap","alignContent","rowData","cellProps","size","borderBottom","classNames","header","Checkbox","checkedIcon","indeterminateIcon","checked","onChange","e","prevState","indeterminate","some","isCellSelected","hoveredColumn","hoveredRowData","VirtualList","DynamicList","getClassName","handleRefresh","setCache","CellMeasurerCache","fixedWidth","minHeight","React","cache","deferredMeasurementCache","overscanRowCount","rowCount","rowRenderer","index","key","parent","columnIndex","rowIndex","measure","registerChild","ref","footer","tablefooterheight","text","hint","paper","GenericTable","elevation","selector","Data","Height","isList","other","useSelector","VirtualComponent","Paper","TablePlaceHolder","Divider"],"mappings":"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","file":"static/js/4.802501c2.chunk.js","sourcesContent":["import * as React from 'react';\nimport { connect } from 'react-redux';\nimport { AppState } from '../../../store';\nimport { Typography } from '@material-ui/core';\n\nexport interface TablePlaceholderProps {\n  name?: string;\n  tab?: string;\n  placeholder?: string; //optional placeholder text\n  renderPlaceholder?: (props: TablePlaceholderProps) => React.Component;\n  primary?: string;\n  secondary?: string;\n  classes?: any;\n}\n\nconst TablePlaceholder = (props: TablePlaceholderProps) => {\n  const { primary, secondary, renderPlaceholder } = props;\n\n  return renderPlaceholder ? (\n    renderPlaceholder(props)\n  ) : (\n    <>\n      {primary && (\n        <Typography color='textSecondary' variant='subtitle1' style={{ padding: 16 }} align='center'>\n          {primary}\n        </Typography>\n      )}\n      {secondary && (\n        <Typography color='textSecondary' variant='body1' style={{ padding: 16 }} align='center'>\n          {secondary}\n        </Typography>\n      )}\n    </>\n  );\n};\n\nconst mapStateToProps = (state: AppState, ownProp: TablePlaceholderProps): TablePlaceholderProps => {\n  const { name, placeholder } = ownProp;\n  const table = state.table[name];\n  const primary = ownProp.primary || `No ${name}`;\n  const secondary = ownProp.secondary || placeholder;\n  return {\n    ...ownProp,\n    tab: table && table.tab && table.tab,\n    primary,\n    secondary\n  };\n};\n\nexport default connect(mapStateToProps)(TablePlaceholder as any) as any;\n","import * as React from 'react';\nimport * as Icons from '@material-ui/icons';\nimport { makeStyles, useTheme, Typography, Collapse, Checkbox, Grid, createStyles } from '@material-ui/core';\nimport MuiTable from 'mui-virtualized-table';\nimport AutoSizer from 'react-virtualized/dist/commonjs/AutoSizer';\nimport Component from '@reactions/component';\nimport classNames from 'classnames';\nimport * as TableStore from './store';\nimport { SortComparator } from './helpers';\nimport { evalFunc } from '../../../helpers';\n\nexport interface VirtualTableProps {\n  name?: string;\n  height?: number;\n  checkbox?: boolean;\n  hover?: boolean;\n  onCellClick?: (event, props) => any;\n  onHeaderClick?: (event, props) => any;  \n  isCellHovered?: (column, rowData, hoveredColumn, hoveredRowData) => boolean;\n  select?: boolean;\n  columns?: any[] | ((props?) => any[]);\n  data?: any[];\n  MultiSelectToolbar?: any;\n  rounded?: boolean;\n  rowHeight?: number;\n  includeHeaders?: boolean;\n  fixedRowCount?: number;\n  showScroll?: boolean;\n  rowDivider?: boolean;\n}\n\nconst gridStyle = {\n  border: 0,\n  'scrollbar-width': 'none' /* Firefox 64 */\n};\n\nconst sharedTableStyle = {\n  border: 0,\n  '& .topLeftGrid': gridStyle,\n  '& .topRightGrid': gridStyle,\n  '& .bottomLeftGrid': gridStyle\n};\n\nconst tableStyle = {\n  ...sharedTableStyle,\n  '& .bottomRightGrid': {\n    border: 0,\n    // Hide scrollbars on Chrome/Safari/IE\n    '&::-webkit-scrollbar': {\n      display: 'none'\n    },\n    'scrollbar-width': 'none' /* Firefox 64 */,\n    '-ms-overflow-style': 'none' as any,\n    '-webkit-overflow-scrolling': 'auto',\n    '&::-webkit-overflow-scrolling': 'auto'\n  }\n};\n\nexport const tableScrollStyle = ({ palette }) => ({\n  ...sharedTableStyle,\n  '& .bottomRightGrid': {\n    '&::-webkit-scrollbar': {\n      display: 'auto',\n      width: 6,\n      height: 6\n    },\n    '&::-webkit-scrollbar-thumb': {\n      // Works on chrome only\n      backgroundColor: palette.primary.light,\n      borderRadius: 25\n    },\n    border: 0,\n    '-ms-overflow-style': 'none' as any,\n    '-webkit-overflow-scrolling': 'auto',\n    '&::-webkit-overflow-scrolling': 'auto'\n  }\n});\n\nconst useStyles = makeStyles(({ palette, spacing, layout }: any) =>\n  createStyles({\n    table: {\n      ...tableStyle\n    },\n    tableRounded: {\n      borderBottomLeftRadius: 12,\n      borderBottomRightRadius: 12,\n      ...tableStyle\n    },\n    tableScroll: {\n      ...tableScrollStyle({ palette })\n    },\n    tableScrollRounded: {\n      borderBottomLeftRadius: 12,\n      borderBottomRightRadius: 12,\n      ...tableScrollStyle({ palette })\n    },\n    cellHovered: {\n      backgroundColor: palette.primary.light\n    },\n    cellSelected: {\n      color: palette.common.white + ' !important',\n      backgroundColor: palette.primary.main\n    },\n    checkbox: {\n      paddingLeft: 0,\n      paddingRight: 0\n    },\n    checkboxIcon: {\n      backgroundColor: palette.common.white\n    },\n    selectedHeader: {\n      paddingLeft: spacing(1),\n      paddingRight: spacing(1),\n      color: palette.common.white,\n      backgroundColor: palette.primary.main,\n      height: layout.multiselectbarheight,\n      marginBottom: layout.contentrowspacing\n    },\n    cell: {\n      //color: palette.secondary.main,\n    },\n    collapse: {\n      background: palette.grey[400]\n    }\n  })\n);\n\n//If a row data function exists, it returns the results of that, otherwise just the row id\nexport function getRowData(selectedRowIds, data) {\n  return selectedRowIds\n    .map(rid => data.find(d => d.id === rid))\n    .filter(row => row)\n    .map(row => (row.getRowData ? { ...row.getRowData(row) } : { id: row.id }));\n}\n\nexport default function VirtualTable(props: VirtualTableProps) {\n  const classes = useStyles(props);\n  const { layout } = useTheme();\n  const {\n    name,\n    includeHeaders = true,\n    fixedRowCount = 1,\n    rowHeight = layout.tableRowHeight,\n    rounded = false,\n    hover,\n    onCellClick = undefined,\n    onHeaderClick = undefined,\n    isCellHovered = undefined,\n    select,\n    checkbox,\n    data,\n    height,\n    columns,\n    MultiSelectToolbar,\n    showScroll = false,\n    rowDivider = true\n  } = props;\n\n  const table: TableStore.Table = TableStore.useTable(name);\n  const tableUpdate = TableStore.useTableUpdate();\n\n  const handleSort = (column, sort: SortComparator) => {\n    table &&\n      tableUpdate({\n        id: table.id,\n        orderBy: column,\n        orderDirection: table.orderDirection === 'asc' ? 'desc' : 'asc',\n        sortComparator: sort\n      });\n  };\n\n  const sortinjectedcolumns = evalFunc(columns, props).map(c => ({\n    ...c,\n    onHeaderClick: c.sort\n      ? (event, props) => {\n          handleSort(c.name, c.sort);\n          onHeaderClick(event, props);\n        }\n      : onHeaderClick\n  })); //;== true && handleSort() }));\n  return (\n    <div style={{ height: height }}>\n      <Component initialState={{ selectedRowIds: [] }}>\n        {({ state, setState }) => {\n          const selectedRowIds = state.selectedRowIds;\n          const length = selectedRowIds.length;\n          const itemtxt = length === 0 ? '' : length === 1 ? length + ' item' : length + ' items';\n          const adjustedheight = length > 0 ? height - layout.multiselectbarheight - layout.contentrowspacing : height;\n          return (\n            <AutoSizer>\n              {({ width }) => (\n                <>\n                  <div style={{ width: width }}>\n                    <Collapse className={classes.collapse} in={length > 0}>\n                      <Grid className={classes.selectedHeader} container direction='row' justify='space-between' alignItems='center' spacing={0}>\n                        <Grid item xs zeroMinWidth>\n                          <Typography noWrap color='inherit' variant='h5'>\n                            {itemtxt}\n                          </Typography>\n                        </Grid>\n                        <Grid item xs>\n                          <Grid container justify='flex-end' alignItems='center' alignContent='center'>\n                            <Grid item>{length > 0 && MultiSelectToolbar && <MultiSelectToolbar rowData={getRowData(selectedRowIds, data)} />}</Grid>\n                          </Grid>\n                        </Grid>\n                      </Grid>\n                    </Collapse>\n                  </div>\n                  <MuiTable\n                    cellProps={{\n                      size: 'small',\n                      style: { paddingLeft: 16, paddingRight: 0, borderBottom: rowDivider === false ? 0 : undefined }\n                    }}\n                    classes={{\n                      table: showScroll\n                        ? classNames(classes.tableScroll, rounded && classes.tableScrollRounded)\n                        : classNames(classes.table, rounded && classes.tableRounded),\n                      cellHovered: classes.cellHovered,\n                      cellSelected: classes.cellSelected,\n                      cell: classes.cell\n                    }}\n                    fixedRowCount={fixedRowCount}\n                    width={width}\n                    height={adjustedheight}\n                    rowHeight={rowHeight}\n                    includeHeaders={includeHeaders}\n                    orderBy={table && table.orderBy}\n                    orderDirection={table ? table.orderDirection : 'asc'}\n                    data={data}\n                    columns={\n                      checkbox\n                        ? [\n                            {\n                              name: 'checkbox',\n                              header: (\n                                <Checkbox\n                                  checkedIcon={<Icons.CheckBox className={classes.checkboxIcon} color='primary' />}\n                                  indeterminateIcon={<Icons.IndeterminateCheckBox className={classes.checkboxIcon} color='primary' />}\n                                  checked={state.selectedRowIds.filter(rid => data.find(d => d.id === rid)).length > 0}\n                                  onChange={e =>\n                                    setState(prevState => {\n                                      if (prevState.selectedRowIds.filter(rid => data.find(d => d.id === rid)).length === data.length) {\n                                        // deselect all\n                                        return { selectedRowIds: [] };\n                                      } else {\n                                        // select all\n                                        return {\n                                          selectedRowIds: data.map(d => d.id)\n                                        };\n                                      }\n                                    })\n                                  }\n                                  {...(state.selectedRowIds.filter(rid => data.find(d => d.id === rid)).length > 0 &&\n                                    state.selectedRowIds.filter(rid => data.find(d => d.id === rid)).length !== data.length && {\n                                      indeterminate: true,\n                                      color: 'default'\n                                    })}\n                                />\n                              ),\n                              cell: rowData => (\n                                <Checkbox\n                                  checkedIcon={<Icons.CheckBox className={classes.checkboxIcon} color='primary' />}\n                                  checked={state.selectedRowIds.filter(rid => data.find(d => d.id === rid)).some(id => rowData.id === id)}\n                                />\n                              ),\n                              cellProps: {\n                                style: { paddingLeft: 8, paddingRight: 0 }\n                              },\n                              width: 48\n                            },\n                            ...sortinjectedcolumns\n                          ]\n                        : sortinjectedcolumns\n                    }\n                    isCellSelected={select ? (column, rowData) => state.selectedRowIds.some(id => rowData && rowData.id === id) : undefined}\n                    isCellHovered={\n                      isCellHovered || hover\n                        ? (column, rowData, hoveredColumn, hoveredRowData) =>\n                            isCellHovered\n                              ? isCellHovered(column, rowData, hoveredColumn, hoveredRowData)\n                              : rowData && rowData.id && rowData.id === hoveredRowData.id\n                        : undefined\n                    }\n                    onHeaderClick={onHeaderClick}\n                    onCellClick={\n                      onCellClick\n                        ? onCellClick\n                        : select\n                        ? (event, { column, rowData }) => {\n                            setState(prevState => {\n                              if (prevState.selectedRowIds.some(id => rowData.id === id)) {\n                                // remove\n                                return {\n                                  selectedRowIds: prevState.selectedRowIds.filter(id => id !== rowData.id)\n                                };\n                              } else {\n                                // add\n                                return {\n                                  selectedRowIds: [...prevState.selectedRowIds, rowData.id]\n                                };\n                              }\n                            });\n                          }\n                        : undefined\n                    }\n                    style={{ backgroundColor: 'white' }}\n                  />\n                </>\n              )}\n            </AutoSizer>\n          );\n        }}\n      </Component>\n    </div>\n  );\n}\n","import * as React from 'react';\nimport { useTheme } from '@material-ui/core';\nimport AutoSizer from 'react-virtualized/dist/commonjs/AutoSizer';\nimport Component from '@reactions/component';\nimport { evalFunc } from '../../../helpers';\nimport { CellMeasurer, CellMeasurerCache, List } from 'react-virtualized';\n\nexport interface VirtualListProps {\n  name?: string;\n  height?: number;\n  columns?: any[] | ((props?) => any[]);\n  data?: any[];\n  rowHeight?: number;\n}\n\nexport default function VirtualList(props: VirtualListProps) {\n  const { layout } = useTheme();\n  const { rowHeight = layout.tableRowHeight, data, columns, height } = props;\n\n  const sortinjectedcolumns = evalFunc(columns, props);\n\n  return (\n    <div style={{ height: height }}>\n      <Component initialState={{ selectedRowIds: [] }}>\n        {({ state }) => {\n          const selectedRowIds = state.selectedRowIds;\n          const length = selectedRowIds.length;\n          const adjustedheight = length > 0 ? height - layout.multiselectbarheight - layout.contentrowspacing : height;\n          return (\n            <AutoSizer>\n              {({ width }) => <DynamicList data={data} rowHeight={rowHeight} width={width as any} height={adjustedheight} columns={sortinjectedcolumns} />}\n            </AutoSizer>\n          );\n        }}\n      </Component>\n    </div>\n  );\n}\n\nconst DynamicList = props => {\n  const { height, width, data, columns, rowHeight = 50, getClassName } = props as any;\n\n  const handleRefresh = () => {\n    setCache(\n      new CellMeasurerCache({\n        fixedWidth: true,\n        minHeight: rowHeight\n      })\n    );\n  };\n\n  React.useEffect(() => {\n    setCache(\n      new CellMeasurerCache({\n        fixedWidth: true,\n        minHeight: rowHeight\n      })\n    );\n  }, [data, columns, getClassName, height, rowHeight, width]);\n\n  const [cache, setCache] = React.useState(\n    new CellMeasurerCache({\n      fixedWidth: true,\n      minHeight: props.rowHeight ?? 50\n    })\n  );\n\n  const _rowRenderer = ({ index, key, parent, style }) => {\n    const classNames = getClassName && getClassName({ columnIndex: 0, rowIndex: index });\n    return (\n      <CellMeasurer cache={cache} columnIndex={0} key={key} rowIndex={index} parent={parent}>\n        {({ measure, registerChild }) => (\n          <div ref={registerChild} className={classNames} style={style}>\n            {columns[0].cell({ ...data[index], handleRefresh }, columns[0])}\n          </div>\n        )}\n      </CellMeasurer>\n    );\n  };\n\n  return (\n    <List\n      deferredMeasurementCache={cache}\n      height={height}\n      overscanRowCount={0}\n      rowCount={data.length}\n      rowHeight={cache.rowHeight}\n      rowRenderer={_rowRenderer}\n      width={width}\n    />\n  );\n};\n","import * as React from 'react';\nimport { useSelector } from 'react-redux';\nimport { AppState } from '../../../store';\nimport TablePlaceHolder from './TablePlaceHolder';\nimport VirtualTable, { VirtualTableProps } from './VirtualTable';\nimport { Typography, Divider, useTheme, makeStyles, createStyles, Paper, Grid } from '@material-ui/core';\nimport VirtualList from './VirtualList';\n\nexport interface GenericTableProps extends VirtualTableProps {\n  footer?: boolean;\n  elevation?: number;\n  placeholder?: string | React.ReactNode;\n  selector?(state, props): [];\n  length?: number;\n  isList?: boolean;\n}\n\nconst useStyles = makeStyles(({ palette, spacing, layout }: any) =>\n  createStyles({\n    placeholder: {\n      padding: spacing(1),\n      background: palette.grey[50]\n    },\n    footer: {\n      paddingRight: spacing(1),\n      background: palette.grey[200],\n      border: 8,\n      height: layout.tablefooterheight,\n      color: palette.text.hint\n    },\n    paper: ({ rounded }: any) => ({\n      borderBottomLeftRadius: rounded ? 4 : 0,\n      borderBottomRightRadius: rounded ? 4 : 0\n    })\n  })\n);\n\nexport default function GenericTable(props: GenericTableProps) {\n  const { elevation = 4, placeholder, footer, name, selector, data: Data = [], height: Height, isList, ...other } = props;\n  const classes = useStyles(props);\n  const { layout } = useTheme();\n  const data = useSelector((state: AppState) => (selector ? selector(state, props) : Data));\n  const length = data && data.length ? data.length : 0;\n  const height = footer ? Height - layout.tablefooterheight : Height;\n\n  const VirtualComponent = isList ? VirtualList : VirtualTable;\n\n  return (\n    <Paper elevation={elevation} className={classes.paper}>\n      {length === 0 ? (\n        <Grid style={{ height: height }} container className={classes.placeholder} alignItems='center' justify='center'>\n          <Grid item xs>\n            <TablePlaceHolder {...props} />\n          </Grid>\n          <Grid item xs={12} />\n        </Grid>\n      ) : (\n        <VirtualComponent name={name} data={data} height={height} {...other} />\n      )}\n      {footer && (\n        <>\n          <Divider />\n          <Grid container className={classes.footer} alignContent='center' alignItems='center' justify='flex-end'>\n            <Grid item container alignItems='center' justify='flex-end'>\n              <Typography align='right' variant='caption'>\n                Viewing {length} {name}\n              </Typography>\n            </Grid>\n          </Grid>\n        </>\n      )}\n    </Paper>\n  );\n}\n"],"sourceRoot":""}