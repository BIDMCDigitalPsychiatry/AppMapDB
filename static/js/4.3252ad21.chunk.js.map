{"version":3,"sources":["components/application/GenericTable/TablePlaceHolder.tsx","components/application/GenericTable/VirtualTable.tsx","components/application/GenericTable/ExploreGridItem.tsx","components/application/GenericTable/ExploreGrid.tsx","components/application/GenericTable/GenericTable.tsx"],"names":["connect","state","ownProp","name","placeholder","table","primary","secondary","tab","props","renderPlaceholder","Typography","color","variant","style","padding","align","gridStyle","border","sharedTableStyle","tableStyle","display","tableScrollStyle","palette","width","height","backgroundColor","light","borderRadius","useStyles","makeStyles","spacing","layout","createStyles","tableRounded","borderBottomLeftRadius","borderBottomRightRadius","tableScroll","tableScrollRounded","cellHovered","cellSelected","common","white","main","checkbox","paddingLeft","paddingRight","checkboxIcon","selectedHeader","multiselectbarheight","marginBottom","contentrowspacing","cell","collapse","background","grey","getRowData","selectedRowIds","data","map","rid","find","d","id","filter","row","VirtualTable","classes","useTheme","includeHeaders","fixedRowCount","fixedColumnCount","rowHeight","tableRowHeight","rounded","hover","onCellClick","undefined","onHeaderClick","isCellHovered","select","columns","MultiSelectToolbar","showScroll","rowDivider","TableStore","tableUpdate","sortinjectedcolumns","evalFunc","c","sort","event","column","orderBy","orderDirection","sortComparator","initialState","setState","length","itemtxt","adjustedheight","Collapse","className","in","Grid","container","direction","justify","alignItems","item","xs","zeroMinWidth","noWrap","alignContent","rowData","cellProps","size","borderBottom","classNames","header","Checkbox","checkedIcon","indeterminateIcon","checked","onChange","e","prevState","indeterminate","some","isCellSelected","hoveredColumn","hoveredRowData","theme","root","flex","textAlign","transition","transform","cursor","cardContent","paddingTop","paddingBottom","media","wrapper","overflow","text","fontFamily","typography","fontSize","h2","fontWeight","fontWeightBold","lineHeight","h3","body1","marginTop","stripContent","content","stripTags","DOMPurify","sanitize","marked","isEmpty","ExploreGridItem","getAppName","company","getAppCompany","platforms","costs","androidLink","iosLink","androidStore","appleStore","webLink","icon","getAppIcon","created","updated","children","React","raised","handleChangeRoute","useHandleChangeRoute","description","Card","CardContent","onClick","publicUrl","app","from","onMouseOver","onMouseOut","CardMedia","image","component","alt","PlatformButtons","DialogButton","Icon","tooltip","join","dangerouslySetInnerHTML","__html","lineClamp","getDayTimeFromTimestamp","ItemContainer","styled","div","ListContainer","ExploreGrid","totalCount","overscan","components","Item","List","ScrollSeekPlaceholder","index","itemContent","getValues","scrollSeekConfiguration","enter","velocity","Math","abs","exit","footer","tablefooterheight","hint","paper","GenericTable","elevation","selector","Data","Height","isGrid","other","useSelector","VirtualComponent","Paper","TablePlaceHolder","Divider"],"mappings":"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","file":"static/js/4.3252ad21.chunk.js","sourcesContent":["import * as React from 'react';\nimport { connect } from 'react-redux';\nimport { AppState } from '../../../store';\nimport { Typography } from '@material-ui/core';\n\nexport interface TablePlaceholderProps {\n  name?: string;\n  tab?: string;\n  placeholder?: string; //optional placeholder text\n  renderPlaceholder?: (props: TablePlaceholderProps) => React.Component;\n  primary?: string;\n  secondary?: string;\n  classes?: any;\n}\n\nconst TablePlaceholder = (props: TablePlaceholderProps) => {\n  const { primary, secondary, renderPlaceholder } = props;\n\n  return renderPlaceholder ? (\n    renderPlaceholder(props)\n  ) : (\n    <>\n      {primary && (\n        <Typography color='textSecondary' variant='subtitle1' style={{ padding: 16 }} align='center'>\n          {primary}\n        </Typography>\n      )}\n      {secondary && (\n        <Typography color='textSecondary' variant='body1' style={{ padding: 16 }} align='center'>\n          {secondary}\n        </Typography>\n      )}\n    </>\n  );\n};\n\nconst mapStateToProps = (state: AppState, ownProp: TablePlaceholderProps): TablePlaceholderProps => {\n  const { name, placeholder } = ownProp;\n  const table = state.table[name];\n  const primary = ownProp.primary || `No ${name}`;\n  const secondary = ownProp.secondary || placeholder;\n  return {\n    ...ownProp,\n    tab: table && table.tab && table.tab,\n    primary,\n    secondary\n  };\n};\n\nexport default connect(mapStateToProps)(TablePlaceholder as any) as any;\n","import * as React from 'react';\nimport * as Icons from '@material-ui/icons';\nimport { makeStyles, useTheme, Typography, Collapse, Checkbox, Grid, createStyles } from '@material-ui/core';\nimport MuiTable from 'mui-virtualized-table';\nimport AutoSizer from 'react-virtualized/dist/commonjs/AutoSizer';\nimport Component from '@reactions/component';\nimport classNames from 'classnames';\nimport * as TableStore from './store';\nimport { SortComparator } from './helpers';\nimport { evalFunc } from '../../../helpers';\n\nexport interface VirtualTableProps {\n  name?: string;\n  height?: number;\n  checkbox?: boolean;\n  hover?: boolean;\n  onCellClick?: (event, props) => any;\n  onHeaderClick?: (event, props) => any;\n  isCellHovered?: (column, rowData, hoveredColumn, hoveredRowData) => boolean;\n  select?: boolean;\n  columns?: any[] | ((props?) => any[]);\n  data?: any[];\n  MultiSelectToolbar?: any;\n  rounded?: boolean;\n  rowHeight?: number;\n  includeHeaders?: boolean;\n  fixedRowCount?: number;\n  fixedColumnCount?: number;\n  showScroll?: boolean;\n  rowDivider?: boolean;\n}\n\nconst gridStyle = {\n  border: 0,\n  'scrollbar-width': 'none' /* Firefox 64 */\n};\n\nconst sharedTableStyle = {\n  border: 0,\n  '& .topLeftGrid': gridStyle,\n  '& .topRightGrid': gridStyle,\n  '& .bottomLeftGrid': gridStyle\n};\n\nconst tableStyle = {\n  ...sharedTableStyle,\n  '& .bottomRightGrid': {\n    border: 0,\n    // Hide scrollbars on Chrome/Safari/IE\n    '&::-webkit-scrollbar': {\n      display: 'none'\n    },\n    'scrollbar-width': 'none' /* Firefox 64 */,\n    '-ms-overflow-style': 'none' as any,\n    '-webkit-overflow-scrolling': 'auto',\n    '&::-webkit-overflow-scrolling': 'auto'\n  }\n};\n\nexport const tableScrollStyle = ({ palette }) => ({\n  ...sharedTableStyle,\n  '& .bottomRightGrid': {\n    '&::-webkit-scrollbar': {\n      display: 'auto',\n      width: 6,\n      height: 6\n    },\n    '&::-webkit-scrollbar-thumb': {\n      // Works on chrome only\n      backgroundColor: palette.primary.light,\n      borderRadius: 25\n    },\n    border: 0,\n    '-ms-overflow-style': 'none' as any,\n    '-webkit-overflow-scrolling': 'auto',\n    '&::-webkit-overflow-scrolling': 'auto'\n  }\n});\n\nconst useStyles = makeStyles(({ palette, spacing, layout }: any) =>\n  createStyles({\n    table: {\n      ...tableStyle\n    },\n    tableRounded: {\n      borderBottomLeftRadius: 12,\n      borderBottomRightRadius: 12,\n      ...tableStyle\n    },\n    tableScroll: {\n      ...tableScrollStyle({ palette })\n    },\n    tableScrollRounded: {\n      borderBottomLeftRadius: 12,\n      borderBottomRightRadius: 12,\n      ...tableScrollStyle({ palette })\n    },\n    cellHovered: {\n      backgroundColor: palette.primary.light\n    },\n    cellSelected: {\n      color: palette.common.white + ' !important',\n      backgroundColor: palette.primary.main\n    },\n    checkbox: {\n      paddingLeft: 0,\n      paddingRight: 0\n    },\n    checkboxIcon: {\n      backgroundColor: palette.common.white\n    },\n    selectedHeader: {\n      paddingLeft: spacing(1),\n      paddingRight: spacing(1),\n      color: palette.common.white,\n      backgroundColor: palette.primary.main,\n      height: layout.multiselectbarheight,\n      marginBottom: layout.contentrowspacing\n    },\n    cell: {\n      //color: palette.secondary.main,\n    },\n    collapse: {\n      background: palette.grey[400]\n    }\n  })\n);\n\n//If a row data function exists, it returns the results of that, otherwise just the row id\nexport function getRowData(selectedRowIds, data) {\n  return selectedRowIds\n    .map(rid => data.find(d => d.id === rid))\n    .filter(row => row)\n    .map(row => (row.getRowData ? { ...row.getRowData(row) } : { id: row.id }));\n}\n\nexport default function VirtualTable(props: VirtualTableProps) {\n  const classes = useStyles(props);\n  const { layout } = useTheme() as any;\n  const {\n    name,\n    includeHeaders = true,\n    fixedRowCount = 1,\n    fixedColumnCount = 0,\n    rowHeight = layout.tableRowHeight,\n    rounded = false,\n    hover,\n    onCellClick = undefined,\n    onHeaderClick = undefined,\n    isCellHovered = undefined,\n    select,\n    checkbox,\n    data,\n    height,\n    columns,\n    MultiSelectToolbar,\n    showScroll = false,\n    rowDivider = true\n  } = props;\n\n  const table: TableStore.Table = TableStore.useTable(name);\n  const tableUpdate = TableStore.useTableUpdate();\n\n  const handleSort = (column, sort: SortComparator) => {\n    table &&\n      tableUpdate({\n        id: table.id,\n        orderBy: column,\n        orderDirection: table.orderDirection === 'asc' ? 'desc' : 'asc',\n        sortComparator: sort\n      });\n  };\n\n  const sortinjectedcolumns = evalFunc(columns, props).map(c => ({\n    ...c,\n    onHeaderClick: c.sort\n      ? (event, props) => {\n          handleSort(c.name, c.sort);\n          onHeaderClick && onHeaderClick(event, props);\n        }\n      : onHeaderClick\n  })); //;== true && handleSort() }));\n  return (\n    <div style={{ height: height }}>\n      <Component initialState={{ selectedRowIds: [] }}>\n        {({ state, setState }) => {\n          const selectedRowIds = state.selectedRowIds;\n          const length = selectedRowIds.length;\n          const itemtxt = length === 0 ? '' : length === 1 ? length + ' item' : length + ' items';\n          const adjustedheight = length > 0 ? height - layout.multiselectbarheight - layout.contentrowspacing : height;\n          return (\n            <AutoSizer>\n              {({ width }) => (\n                <>\n                  <div style={{ width: width }}>\n                    <Collapse className={classes.collapse} in={length > 0}>\n                      <Grid className={classes.selectedHeader} container direction='row' justify='space-between' alignItems='center' spacing={0}>\n                        <Grid item xs zeroMinWidth>\n                          <Typography noWrap color='inherit' variant='h5'>\n                            {itemtxt}\n                          </Typography>\n                        </Grid>\n                        <Grid item xs>\n                          <Grid container justify='flex-end' alignItems='center' alignContent='center'>\n                            <Grid item>{length > 0 && MultiSelectToolbar && <MultiSelectToolbar rowData={getRowData(selectedRowIds, data)} />}</Grid>\n                          </Grid>\n                        </Grid>\n                      </Grid>\n                    </Collapse>\n                  </div>\n                  <MuiTable\n                    cellProps={{\n                      size: 'small',\n                      style: { paddingLeft: 16, paddingRight: 0, borderBottom: rowDivider === false ? 0 : undefined }\n                    }}\n                    classes={{\n                      table: showScroll\n                        ? classNames(classes.tableScroll, rounded && classes.tableScrollRounded)\n                        : classNames(classes.table, rounded && classes.tableRounded),\n                      cellHovered: classes.cellHovered,\n                      cellSelected: classes.cellSelected,\n                      cell: classes.cell\n                    }}\n                    fixedRowCount={fixedRowCount}\n                    fixedColumnCount={fixedColumnCount}\n                    width={width}\n                    height={adjustedheight}\n                    rowHeight={rowHeight}\n                    includeHeaders={includeHeaders}\n                    orderBy={table && table.orderBy}\n                    orderDirection={table ? table.orderDirection : 'asc'}\n                    data={data}\n                    columns={\n                      checkbox\n                        ? [\n                            {\n                              name: 'checkbox',\n                              header: (\n                                <Checkbox\n                                  checkedIcon={<Icons.CheckBox className={classes.checkboxIcon} color='primary' />}\n                                  indeterminateIcon={<Icons.IndeterminateCheckBox className={classes.checkboxIcon} color='primary' />}\n                                  checked={state.selectedRowIds.filter(rid => data.find(d => d.id === rid)).length > 0}\n                                  onChange={e =>\n                                    setState(prevState => {\n                                      if (prevState.selectedRowIds.filter(rid => data.find(d => d.id === rid)).length === data.length) {\n                                        // deselect all\n                                        return { selectedRowIds: [] };\n                                      } else {\n                                        // select all\n                                        return {\n                                          selectedRowIds: data.map(d => d.id)\n                                        };\n                                      }\n                                    })\n                                  }\n                                  {...(state.selectedRowIds.filter(rid => data.find(d => d.id === rid)).length > 0 &&\n                                    state.selectedRowIds.filter(rid => data.find(d => d.id === rid)).length !== data.length && {\n                                      indeterminate: true,\n                                      color: 'default'\n                                    })}\n                                />\n                              ),\n                              cell: rowData => (\n                                <Checkbox\n                                  checkedIcon={<Icons.CheckBox className={classes.checkboxIcon} color='primary' />}\n                                  checked={state.selectedRowIds.filter(rid => data.find(d => d.id === rid)).some(id => rowData.id === id)}\n                                />\n                              ),\n                              cellProps: {\n                                style: { paddingLeft: 8, paddingRight: 0 }\n                              },\n                              width: 48\n                            },\n                            ...sortinjectedcolumns\n                          ]\n                        : sortinjectedcolumns\n                    }\n                    isCellSelected={select ? (column, rowData) => state.selectedRowIds.some(id => rowData && rowData.id === id) : undefined}\n                    isCellHovered={\n                      isCellHovered || hover\n                        ? (column, rowData, hoveredColumn, hoveredRowData) =>\n                            isCellHovered\n                              ? isCellHovered(column, rowData, hoveredColumn, hoveredRowData)\n                              : rowData && rowData.id && rowData.id === hoveredRowData.id\n                        : undefined\n                    }\n                    onHeaderClick={onHeaderClick}\n                    onCellClick={\n                      onCellClick\n                        ? onCellClick\n                        : select\n                        ? (event, { column, rowData }) => {\n                            setState(prevState => {\n                              if (prevState.selectedRowIds.some(id => rowData.id === id)) {\n                                // remove\n                                return {\n                                  selectedRowIds: prevState.selectedRowIds.filter(id => id !== rowData.id)\n                                };\n                              } else {\n                                // add\n                                return {\n                                  selectedRowIds: [...prevState.selectedRowIds, rowData.id]\n                                };\n                              }\n                            });\n                          }\n                        : undefined\n                    }\n                    style={{ backgroundColor: 'white' }}\n                  />\n                </>\n              )}\n            </AutoSizer>\n          );\n        }}\n      </Component>\n    </div>\n  );\n}\n","import * as React from 'react';\nimport { Card, CardContent, CardMedia, createStyles, Grid, makeStyles, Typography } from '@material-ui/core';\nimport marked from 'marked';\nimport DOMPurify from 'dompurify';\nimport { getDayTimeFromTimestamp, isEmpty, lineClamp, publicUrl, stripTags } from '../../../helpers';\nimport { useHandleChangeRoute } from '../../layout/hooks';\nimport { getAppCompany, getAppIcon, getAppName } from './Applications/selectors';\nimport PlatformButtons from './ApplicationsSummary/PlatformButtons';\nimport DialogButton from '../GenericDialog/DialogButton';\n\nconst height = 520;\nconst useStyles = makeStyles(theme =>\n  createStyles({\n    root: {\n      flex: '1',\n      textAlign: 'center',\n      height,\n      borderRadius: 10,\n      transition: 'transform 0.15s ease-in-out',\n      '&:hover': {\n        transform: 'scale3d(1.025, 1.025, 1)'\n      },\n      cursor: 'pointer'\n    },\n    cardContent: {\n      paddingTop: 8,\n      paddingBottom: 0\n    },\n    media: {\n      borderBottom: `1px solid ${theme.palette.grey[400]}`\n    },\n    wrapper: {\n      height: height - 200,\n      overflow: 'hidden',\n      color: theme.palette.text.primary,\n      fontFamily: theme.typography.fontFamily,\n      '& h2': {\n        fontSize: theme.typography.h2.fontSize,\n        fontWeight: theme.typography.fontWeightBold,\n        lineHeight: theme.typography.h2.lineHeight,\n        marginBottom: theme.spacing(3)\n      },\n      '& h3': {\n        fontSize: theme.typography.h3.fontSize,\n        fontWeight: theme.typography.fontWeightBold,\n        lineHeight: theme.typography.h3.lineHeight,\n        marginBottom: theme.spacing(3)\n      },\n      '& p': {\n        fontSize: theme.typography.body1.fontSize,\n        lineHeight: theme.typography.body1.lineHeight,\n        marginBottom: 8,\n        marginTop: 8\n      },\n      '& li': {\n        fontSize: theme.typography.body1.fontSize,\n        lineHeight: theme.typography.body1.lineHeight,\n        marginBottom: theme.spacing(1)\n      }\n    }\n  })\n);\n\nconst stripContent = content => '<p>' + stripTags(DOMPurify.sanitize(marked(isEmpty(content) ? '' : content)) ?? '') + '</p>';\n\nexport default function ExploreGridItem(props: any) {\n  const {\n    name = getAppName(props),\n    company = getAppCompany(props),\n    platforms = [],\n    costs = [],\n    androidLink,\n    iosLink,\n    androidStore,\n    appleStore,\n    webLink,\n    icon = getAppIcon(props),\n    created,\n    updated,\n    children = undefined\n  } = props;\n\n  const [state, setState] = React.useState({\n    raised: false\n  });\n\n  const classes = useStyles();\n  const handleChangeRoute = useHandleChangeRoute();\n\n  const content = !isEmpty(appleStore?.description) ? appleStore.description : androidStore?.description;\n\n  return children ? (\n    <Card className={classes.root}>\n      <CardContent>{children}</CardContent>\n    </Card>\n  ) : (\n    <Card\n      onClick={handleChangeRoute(publicUrl('/ViewApp'), { app: props, from: 'ApplicationSummary' })}\n      className={classes.root}\n      onMouseOver={() => setState({ raised: true })}\n      onMouseOut={() => setState({ raised: false })}\n      raised={state.raised}\n    >\n      <CardMedia className={classes.media} image={icon} component='img' height='200' width='100%' alt='cover image' />\n      <CardContent className={classes.cardContent}>\n        <Grid container>\n          <Grid item xs={12}>\n            <Grid container>\n              <Grid item xs={12}>\n                <Typography variant='h5' noWrap>\n                  {name || 'Unknown Name'}\n                </Typography>\n              </Grid>\n              <Grid item xs={12}>\n                <Typography color='textSecondary' noWrap>\n                  {company}\n                </Typography>\n              </Grid>\n              <Grid item xs={12}>\n                <Grid container justify='center' spacing={0}>\n                  <Grid item>\n                    <PlatformButtons platforms={platforms} androidLink={androidLink} iosLink={iosLink} webLink={webLink} />\n                  </Grid>\n                  <Grid item xs={12}>\n                    <Typography noWrap color='textSecondary' variant='caption'>\n                      {costs.length === 0 ? (\n                        'Unknown Cost'\n                      ) : costs.length > 2 ? (\n                        <DialogButton variant='link' size='small' Icon={null} tooltip={costs.join(' | ')}>\n                          Multiple Associated Costs\n                        </DialogButton>\n                      ) : (\n                        costs.join(' | ')\n                      )}\n                    </Typography>\n                  </Grid>\n                </Grid>\n              </Grid>\n            </Grid>\n          </Grid>\n        </Grid>\n        <div className={classes.wrapper}>\n          <div dangerouslySetInnerHTML={{ __html: lineClamp(stripContent(content), 7) }} />\n          <Grid container style={{ marginTop: 4 }}>\n            <Grid item xs={12}>\n              <Typography noWrap display='block' align='right' color='textSecondary' variant='caption'>\n                Last Rating: {updated ? getDayTimeFromTimestamp(updated) : created ? getDayTimeFromTimestamp(created) : ''}\n              </Typography>\n            </Grid>\n          </Grid>\n        </div>\n      </CardContent>\n    </Card>\n  );\n}\n","import ExploreGridItem from './ExploreGridItem';\nimport { VirtuosoGrid } from 'react-virtuoso';\nimport styled from '@emotion/styled';\n\nconst ItemContainer = styled.div`\n  padding: 0.5rem;\n  width: 25%;\n  display: flex;\n  flex: none;\n  align-content: stretch;\n\n  @media (max-width: 1300px) {\n    width: 33%;\n  }\n\n  @media (max-width: 1200px) {\n    width: 50%;\n  }\n\n  @media (max-width: 550px) {\n    width: 100%;\n  }\n`;\n\nconst ListContainer = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n`;\n\nexport default function ExploreGrid({ data, height, ...other }) {\n  return (\n    <>\n      <VirtuosoGrid\n        totalCount={data.length}\n        style={{ height }}\n        overscan={20}\n        components={{\n          Item: ItemContainer,\n          List: ListContainer as any,\n          ScrollSeekPlaceholder: ({ height, width, index }) => (\n            <ItemContainer>\n              <ExploreGridItem>--</ExploreGridItem>\n            </ItemContainer>\n          )\n        }}\n        itemContent={index => {\n          const item = data[index] ?? {};\n          return item && item.getValues && <ExploreGridItem index={index} {...item.getValues()} />;\n        }}\n        scrollSeekConfiguration={{\n          enter: velocity => Math.abs(velocity) > 1200,\n          exit: velocity => Math.abs(velocity) < 30,\n          // change: (_, range) => console.log({ range })\n        }}\n      />\n    </>\n  );\n}\n","import * as React from 'react';\nimport { useSelector } from 'react-redux';\nimport { AppState } from '../../../store';\nimport TablePlaceHolder from './TablePlaceHolder';\nimport VirtualTable, { VirtualTableProps } from './VirtualTable';\nimport { Typography, Divider, useTheme, makeStyles, createStyles, Paper, Grid } from '@material-ui/core';\nimport ExploreGrid from './ExploreGrid';\n\nexport interface GenericTableProps extends VirtualTableProps {\n  footer?: boolean;\n  elevation?: number;\n  placeholder?: string | React.ReactNode;\n  selector?(state, props): [];\n  length?: number;\n  isGrid?: boolean;\n}\n\nconst useStyles = makeStyles(({ palette, spacing, layout }: any) =>\n  createStyles({\n    placeholder: {\n      padding: spacing(1),\n      background: palette.grey[50]\n    },\n    footer: {\n      paddingRight: spacing(1),\n      background: palette.grey[200],\n      border: 8,\n      height: layout.tablefooterheight,\n      color: palette.text.hint\n    },\n    paper: ({ rounded }: any) => ({\n      borderBottomLeftRadius: rounded ? 4 : 0,\n      borderBottomRightRadius: rounded ? 4 : 0\n    })\n  })\n);\n\nexport default function GenericTable(props: GenericTableProps) {\n  const { elevation = 4, placeholder, footer, name, selector, data: Data = [], height: Height, isGrid, ...other } = props;\n  const classes = useStyles(props);\n  const { layout } = useTheme() as any;\n  const data = useSelector((state: AppState) => (selector ? selector(state, props) : Data));\n  const length = data && data.length ? data.length : 0;\n  const height = footer ? Height - layout.tablefooterheight : Height;\n\n  const VirtualComponent = isGrid ? ExploreGrid : VirtualTable; \n\n  return (\n    <Paper elevation={elevation} className={classes.paper}>\n      {length === 0 ? (\n        <Grid style={{ height: height }} container className={classes.placeholder} alignItems='center' justify='center'>\n          <Grid item xs>\n            <TablePlaceHolder {...props} />\n          </Grid>\n          <Grid item xs={12} />\n        </Grid>\n      ) : (\n        <VirtualComponent name={name} data={data} height={height} {...other} />\n      )}\n      {footer && (\n        <>\n          <Divider />\n          <Grid container className={classes.footer} alignContent='center' alignItems='center' justify='flex-end'>\n            <Grid item container alignItems='center' justify='flex-end'>\n              <Typography align='right' variant='caption'>\n                Viewing {length} {name}\n              </Typography>\n            </Grid>\n          </Grid>\n        </>\n      )}\n    </Paper>\n  );\n}\n"],"sourceRoot":""}