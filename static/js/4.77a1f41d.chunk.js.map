{"version":3,"sources":["components/application/GenericTable/TablePlaceHolder.tsx","components/application/GenericTable/VirtualTable.tsx","components/application/GenericTable/GenericTable.tsx"],"names":["connect","state","ownProp","name","placeholder","table","primary","secondary","tab","props","renderPlaceholder","Typography","color","variant","style","padding","align","tableStyle","border","display","tableScrollStyle","useStyles","makeStyles","palette","spacing","layout","createStyles","tableRounded","borderBottomLeftRadius","borderBottomRightRadius","tableScroll","tableScrollRounded","cellHovered","backgroundColor","light","cellSelected","common","white","main","checkbox","paddingLeft","paddingRight","checkboxIcon","selectedHeader","height","multiselectbarheight","marginBottom","contentrowspacing","cell","collapse","background","grey","getRowData","selectedRowIds","data","map","rid","find","d","id","filter","row","VirtualTable","classes","useTheme","includeHeaders","fixedRowCount","rowHeight","tableRowHeight","rounded","hover","select","columns","MultiSelectToolbar","showScroll","TableStore","tableUpdate","sortinjectedcolumns","evalFunc","c","onHeaderClick","sort","column","orderBy","orderDirection","sortComparator","undefined","initialState","setState","length","itemtxt","adjustedheight","width","Collapse","className","in","Grid","container","direction","justify","alignItems","item","xs","zeroMinWidth","noWrap","alignContent","rowData","cellProps","size","classNames","header","Checkbox","checkedIcon","indeterminateIcon","checked","onChange","e","prevState","indeterminate","some","isCellSelected","isCellHovered","hoveredColumn","hoveredRowData","onCellClick","event","footer","tablefooterheight","text","hint","paper","GenericTable","elevation","selector","Data","Height","other","useSelector","Paper","TablePlaceHolder","Divider"],"mappings":"iKAiDeA,eAbS,SAACC,EAAiBC,GAA2D,IAC3FC,EAAsBD,EAAtBC,KAAMC,EAAgBF,EAAhBE,YACRC,EAAQJ,EAAMI,MAAMF,GACpBG,EAAUJ,EAAQI,SAAR,aAAyBH,GACnCI,EAAYL,EAAQK,WAAaH,EACvC,OAAO,eACFF,EADL,CAEEM,IAAKH,GAASA,EAAMG,KAAOH,EAAMG,IACjCF,UACAC,gBAIWP,EAlCU,SAACS,GAAkC,IAClDH,EAA0CG,EAA1CH,QAASC,EAAiCE,EAAjCF,UAAWG,EAAsBD,EAAtBC,kBAE5B,OAAOA,EACLA,EAAkBD,GAElB,gCACGH,GACC,gBAACK,EAAA,EAAD,CAAYC,MAAM,gBAAgBC,QAAQ,YAAYC,MAAO,CAAEC,QAAS,IAAMC,MAAM,UACjFV,GAGJC,GACC,gBAACI,EAAA,EAAD,CAAYC,MAAM,gBAAgBC,QAAQ,QAAQC,MAAO,CAAEC,QAAS,IAAMC,MAAM,UAC7ET,O,6JCFLU,EAAa,CACjBC,OAAQ,EACR,iBAAkB,CAChBA,OAAQ,GAEV,kBAAmB,CACjBA,OAAQ,GAEV,oBAAqB,CACnBA,OAAQ,GAEV,qBAAsB,CACpBA,OAAQ,EAER,uBAAwB,CACtBC,QAAS,QAEX,qBAAsB,OACtB,6BAA8B,OAC9B,gCAAiC,SAI/BC,EAAmB,CACvBF,OAAQ,EACR,iBAAkB,CAChBA,OAAQ,GAEV,kBAAmB,CACjBA,OAAQ,GAEV,oBAAqB,CACnBA,OAAQ,GAEV,qBAAsB,CACpBA,OAAQ,EAER,uBAAwB,CACtBC,QAAS,QAEX,qBAAsB,OACtB,6BAA8B,OAC9B,gCAAiC,SAI/BE,EAAYC,aAAW,gBAAGC,EAAH,EAAGA,QAASC,EAAZ,EAAYA,QAASC,EAArB,EAAqBA,OAArB,OAC3BC,YAAa,CACXrB,MAAM,eACDY,GAELU,aAAa,aACXC,uBAAwB,GACxBC,wBAAyB,IACtBZ,GAELa,YAAY,eACPV,GAELW,mBAAmB,aACjBH,uBAAwB,GACxBC,wBAAyB,IACtBT,GAELY,YAAa,CACXC,gBAAiBV,EAAQjB,QAAQ4B,OAEnCC,aAAc,CACZvB,MAAOW,EAAQa,OAAOC,MAAQ,cAC9BJ,gBAAiBV,EAAQjB,QAAQgC,MAEnCC,SAAU,CACRC,YAAa,EACbC,aAAc,GAEhBC,aAAc,CACZT,gBAAiBV,EAAQa,OAAOC,OAElCM,eAAgB,CACdH,YAAahB,EAAQ,GACrBiB,aAAcjB,EAAQ,GACtBZ,MAAOW,EAAQa,OAAOC,MACtBJ,gBAAiBV,EAAQjB,QAAQgC,KACjCM,OAAQnB,EAAOoB,qBACfC,aAAcrB,EAAOsB,mBAEvBC,KAAM,GAGNC,SAAU,CACRC,WAAY3B,EAAQ4B,KAAK,WAMxB,SAASC,EAAWC,EAAgBC,GACzC,OAAOD,EACJE,KAAI,SAAAC,GAAG,OAAIF,EAAKG,MAAK,SAAAC,GAAC,OAAIA,EAAEC,KAAOH,QACnCI,QAAO,SAAAC,GAAG,OAAIA,KACdN,KAAI,SAAAM,GAAG,OAAKA,EAAIT,WAAJ,eAAsBS,EAAIT,WAAWS,IAAS,CAAEF,GAAIE,EAAIF,OAG1D,SAASG,EAAarD,GACnC,IAAMsD,EAAU1C,EAAUZ,GAClBgB,EAAWuC,cAAXvC,OAENtB,EAaEM,EAbFN,KAJ2D,EAiBzDM,EAZFwD,sBAL2D,WAiBzDxD,EAXFyD,qBAN2D,MAM3C,EAN2C,IAiBzDzD,EAVF0D,iBAP2D,MAO/C1C,EAAO2C,eAPwC,IAiBzD3D,EATF4D,eAR2D,SAS3DC,EAQE7D,EARF6D,MACAC,EAOE9D,EAPF8D,OACAhC,EAME9B,EANF8B,SACAe,EAKE7C,EALF6C,KACAV,EAIEnC,EAJFmC,OACA4B,EAGE/D,EAHF+D,QACAC,EAEEhE,EAFFgE,mBAf2D,EAiBzDhE,EADFiE,kBAhB2D,SAmBvDrE,EAA0BsE,IAAoBxE,GAC9CyE,EAAcD,MAYdE,EAAsBC,YAASN,EAAS/D,GAAO8C,KAAI,SAAAwB,GAAC,sBACrDA,EADqD,CAExDC,cAAeD,EAAEE,KAAO,kBAZNC,EAYuBH,EAAE5E,KAZjB8E,EAYuBF,EAAEE,UAXnD5E,GACEuE,EAAY,CACVjB,GAAItD,EAAMsD,GACVwB,QAASD,EACTE,eAAyC,QAAzB/E,EAAM+E,eAA2B,OAAS,MAC1DC,eAAgBJ,KANH,IAACC,EAAQD,QAYiCK,OAE7D,OACE,uBAAKxE,MAAO,CAAE8B,OAAQA,IACpB,gBAAC,IAAD,CAAW2C,aAAc,CAAElC,eAAgB,MACxC,YAA0B,IAAvBpD,EAAsB,EAAtBA,MAAOuF,EAAe,EAAfA,SACHnC,EAAiBpD,EAAMoD,eACvBoC,EAASpC,EAAeoC,OACxBC,EAAqB,IAAXD,EAAe,GAAgB,IAAXA,EAAeA,EAAS,QAAUA,EAAS,SACzEE,EAAiBF,EAAS,EAAI7C,EAASnB,EAAOoB,qBAAuBpB,EAAOsB,kBAAoBH,EACtG,OACE,gBAAC,IAAD,MACG,gBAAGgD,EAAH,EAAGA,MAAH,OACC,gCACE,uBAAK9E,MAAO,CAAE8E,MAAOA,IACnB,gBAACC,EAAA,EAAD,CAAUC,UAAW/B,EAAQd,SAAU8C,GAAIN,EAAS,GAClD,gBAACO,EAAA,EAAD,CACEF,UAAW/B,EAAQpB,eACnBsD,WAAS,EACTC,UAAU,MACVC,QAAQ,gBACRC,WAAW,SACX5E,QAAS,GAET,gBAACwE,EAAA,EAAD,CAAMK,MAAI,EAACC,IAAE,EAACC,cAAY,GACxB,gBAAC5F,EAAA,EAAD,CAAY6F,QAAM,EAAC5F,MAAM,UAAUC,QAAQ,MACxC6E,IAGL,gBAACM,EAAA,EAAD,CAAMK,MAAI,EAACC,IAAE,GACX,gBAACN,EAAA,EAAD,CAAMC,WAAS,EAACE,QAAQ,WAAWC,WAAW,SAASK,aAAa,UAClE,gBAACT,EAAA,EAAD,CAAMK,MAAI,GACPZ,EAAS,GAAKhB,GACb,gBAACA,EAAD,CAAoBiC,QAAStD,EAAWC,EAAgBC,WAQtE,gBAAC,IAAD,CACEqD,UAAW,CACTC,KAAM,QACN9F,MAAO,CAAE0B,YAAa,GAAIC,aAAc,IAE1CsB,QAAS,CACP1D,MAAOqE,EACHmC,IAAW9C,EAAQjC,YAAauC,GAAWN,EAAQhC,oBACnD8E,IAAW9C,EAAQ1D,MAAOgE,GAAWN,EAAQpC,cACjDK,YAAa+B,EAAQ/B,YACrBG,aAAc4B,EAAQ5B,aACtBa,KAAMe,EAAQf,MAEhBkB,cAAeA,EACf0B,MAAOA,EACPhD,OAAQ+C,EACRxB,UAAWA,EACXF,eAAgBA,EAChBkB,QAAS9E,GAASA,EAAM8E,QACxBC,eAAgB/E,EAAQA,EAAM+E,eAAiB,MAC/C9B,KAAMA,EACNkB,QACEjC,EAAQ,CAEF,CACEpC,KAAM,WACN2G,OACE,gBAACC,EAAA,EAAD,eACEC,YAAa,gBAAC,IAAD,CAAgBlB,UAAW/B,EAAQrB,aAAc9B,MAAM,YACpEqG,kBACE,gBAAC,IAAD,CAA6BnB,UAAW/B,EAAQrB,aAAc9B,MAAM,YAEtEsG,QAASjH,EAAMoD,eAAeO,QAAO,SAAAJ,GAAG,OAAIF,EAAKG,MAAK,SAAAC,GAAC,OAAIA,EAAEC,KAAOH,QAAMiC,OAAS,EACnF0B,SAAU,SAAAC,GAAC,OACT5B,GAAS,SAAA6B,GACP,OACEA,EAAUhE,eAAeO,QAAO,SAAAJ,GAAG,OAAIF,EAAKG,MAAK,SAAAC,GAAC,OAAIA,EAAEC,KAAOH,QAAMiC,SACrEnC,EAAKmC,OAGE,CAAEpC,eAAgB,IAGlB,CACLA,eAAgBC,EAAKC,KAAI,SAAAG,GAAC,OAAIA,EAAEC,YAKnC1D,EAAMoD,eAAeO,QAAO,SAAAJ,GAAG,OAAIF,EAAKG,MAAK,SAAAC,GAAC,OAAIA,EAAEC,KAAOH,QAAMiC,OAAS,GAC7ExF,EAAMoD,eAAeO,QAAO,SAAAJ,GAAG,OAAIF,EAAKG,MAAK,SAAAC,GAAC,OAAIA,EAAEC,KAAOH,QAAMiC,SAC/DnC,EAAKmC,QAAU,CACf6B,eAAe,EACf1G,MAAO,aAIfoC,KAAM,SAAA0D,GAAO,OACX,gBAACK,EAAA,EAAD,CACEC,YAAa,gBAAC,IAAD,CAAgBlB,UAAW/B,EAAQrB,aAAc9B,MAAM,YACpEsG,QAASjH,EAAMoD,eACZO,QAAO,SAAAJ,GAAG,OAAIF,EAAKG,MAAK,SAAAC,GAAC,OAAIA,EAAEC,KAAOH,QACtC+D,MAAK,SAAA5D,GAAE,OAAI+C,EAAQ/C,KAAOA,QAGjCgD,UAAW,CACT7F,MAAO,CAAE0B,YAAa,EAAGC,aAAc,IAEzCmD,MAAO,KA9CP,mBAgDCf,IAELA,EAEN2C,eACEjD,EACI,SAACW,EAAQwB,GAAT,OAAqBzG,EAAMoD,eAAekE,MAAK,SAAA5D,GAAE,OAAI+C,GAAWA,EAAQ/C,KAAOA,WAC/E2B,EAENmC,cACEnD,EACI,SAACY,EAAQwB,EAASgB,EAAeC,GAAjC,OACEjB,GAAWA,EAAQ/C,IAAM+C,EAAQ/C,KAAOgE,EAAehE,SACzD2B,EAENsC,YACErD,EACI,SAACsD,EAAD,GAAgC,EAAtB3C,OAAuB,IAAfwB,EAAc,EAAdA,QAChBlB,GAAS,SAAA6B,GACP,OAAIA,EAAUhE,eAAekE,MAAK,SAAA5D,GAAE,OAAI+C,EAAQ/C,KAAOA,KAE9C,CACLN,eAAgBgE,EAAUhE,eAAeO,QAAO,SAAAD,GAAE,OAAIA,IAAO+C,EAAQ/C,OAIhE,CACLN,eAAe,GAAD,mBAAMgE,EAAUhE,gBAAhB,CAAgCqD,EAAQ/C,eAK9D2B,EAENxE,MAAO,CAAEmB,gBAAiB,mB,8DCtS9C,IAAMZ,EAAYC,aAAW,gBAAGC,EAAH,EAAGA,QAASC,EAAZ,EAAYA,QAASC,EAArB,EAAqBA,OAArB,OAC3BC,YAAa,CACXtB,YAAa,CACXW,QAASS,EAAQ,GACjB0B,WAAY3B,EAAQ4B,KAAK,KAE3B2E,OAAQ,CACNrF,aAAcjB,EAAQ,GACtB0B,WAAY3B,EAAQ4B,KAAK,KACzBjC,OAAQ,EACR0B,OAAQnB,EAAOsG,kBACfnH,MAAOW,EAAQyG,KAAKC,MAEtBC,MAAO,gBAAG7D,EAAH,EAAGA,QAAH,MAAuB,CAC5BzC,uBAAwByC,EAAU,EAAI,EACtCxC,wBAAyBwC,EAAU,EAAI,SAK9B,SAAS8D,EAAa1H,GAA2B,IAAD,EAC6CA,EAAlG2H,iBADqD,MACzC,EADyC,EACzBN,GAAsErH,EAAnFL,YAAmFK,EAAtEqH,QAAQ3H,EAA8DM,EAA9DN,KAAMkI,EAAwD5H,EAAxD4H,SADW,EAC6C5H,EAA9C6C,KAAMgF,OADL,MACY,GADZ,EACwBC,EAAqB9H,EAA7BmC,OAAmB4F,EADnC,YAC6C/H,EAD7C,wEAEvDsD,EAAU1C,EAAUZ,GAClBgB,EAAWuC,cAAXvC,OACF6B,EAAOmF,aAAY,SAACxI,GAAD,OAAsBoI,EAAWA,EAASpI,EAAOQ,GAAS6H,KAC7E7C,EAASnC,GAAQA,EAAKmC,OAASnC,EAAKmC,OAAS,EAC7C7C,EAASkF,EAASS,EAAS9G,EAAOsG,kBAAoBQ,EAE5D,OACE,gBAACG,EAAA,EAAD,CAAON,UAAWA,EAAWtC,UAAW/B,EAAQmE,OAClC,IAAXzC,EACC,gBAACO,EAAA,EAAD,CAAMlF,MAAO,CAAE8B,OAAQA,GAAUqD,WAAS,EAACH,UAAW/B,EAAQ3D,YAAagG,WAAW,SAASD,QAAQ,UACrG,gBAACH,EAAA,EAAD,CAAMK,MAAI,EAACC,IAAE,GACX,gBAACqC,EAAqBlI,IAExB,gBAACuF,EAAA,EAAD,CAAMK,MAAI,EAACC,GAAI,MAGjB,gBAACxC,EAAD,eAAc3D,KAAMA,EAAMmD,KAAMA,EAAMV,OAAQA,GAAY4F,IAE3DV,GACC,gCACE,gBAACc,EAAA,EAAD,MACA,gBAAC5C,EAAA,EAAD,CAAMC,WAAS,EAACH,UAAW/B,EAAQ+D,OAAQrB,aAAa,SAASL,WAAW,SAASD,QAAQ,YAC3F,gBAACH,EAAA,EAAD,CAAMK,MAAI,EAACJ,WAAS,EAACG,WAAW,SAASD,QAAQ,YAC/C,gBAACxF,EAAA,EAAD,CAAYK,MAAM,QAAQH,QAAQ,WAAlC,WACW4E,EADX,IACoBtF","file":"static/js/4.77a1f41d.chunk.js","sourcesContent":["import * as React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { AppState } from '../../../store';\r\nimport { Typography } from '@material-ui/core';\r\n\r\nexport interface TablePlaceholderProps {\r\n  name?: string;\r\n  tab?: string;\r\n  placeholder?: string; //optional placeholder text\r\n  renderPlaceholder?: (props: TablePlaceholderProps) => React.Component;\r\n  primary?: string;\r\n  secondary?: string;\r\n  classes?: any;\r\n}\r\n\r\nconst TablePlaceholder = (props: TablePlaceholderProps) => {\r\n  const { primary, secondary, renderPlaceholder } = props;\r\n\r\n  return renderPlaceholder ? (\r\n    renderPlaceholder(props)\r\n  ) : (\r\n    <>\r\n      {primary && (\r\n        <Typography color='textSecondary' variant='subtitle1' style={{ padding: 16 }} align='center'>\r\n          {primary}\r\n        </Typography>\r\n      )}\r\n      {secondary && (\r\n        <Typography color='textSecondary' variant='body1' style={{ padding: 16 }} align='center'>\r\n          {secondary}\r\n        </Typography>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state: AppState, ownProp: TablePlaceholderProps): TablePlaceholderProps => {\r\n  const { name, placeholder } = ownProp;\r\n  const table = state.table[name];\r\n  const primary = ownProp.primary || `No ${name}`;\r\n  const secondary = ownProp.secondary || placeholder;\r\n  return {\r\n    ...ownProp,\r\n    tab: table && table.tab && table.tab,\r\n    primary,\r\n    secondary\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(TablePlaceholder as any) as any;\r\n","import * as React from 'react';\r\nimport * as Icons from '@material-ui/icons';\r\nimport { makeStyles, useTheme, Typography, Collapse, Checkbox, Grid, createStyles } from '@material-ui/core';\r\nimport MuiTable from 'mui-virtualized-table';\r\nimport AutoSizer from 'react-virtualized/dist/commonjs/AutoSizer';\r\nimport Component from '@reactions/component';\r\nimport classNames from 'classnames';\r\nimport * as TableStore from './TableStore';\r\nimport { SortComparator } from './tablehelpers';\r\nimport { evalFunc } from '../../../helpers';\r\n\r\nexport interface VirtualTableProps {\r\n  name?: string;\r\n  height?: number;\r\n  checkbox?: boolean;\r\n  hover?: boolean;\r\n  select?: boolean;\r\n  columns?: any[] | ((props?) => any[]);\r\n  data?: any[];\r\n  MultiSelectToolbar?: any;\r\n  rounded?: boolean;\r\n  rowHeight?: number;\r\n  includeHeaders?: boolean;\r\n  fixedRowCount?: number;\r\n  showScroll?: boolean;\r\n}\r\n\r\nconst tableStyle = {\r\n  border: 0,\r\n  '& .topLeftGrid': {\r\n    border: 0\r\n  },\r\n  '& .topRightGrid': {\r\n    border: 0\r\n  },\r\n  '& .bottomLeftGrid': {\r\n    border: 0\r\n  },\r\n  '& .bottomRightGrid': {\r\n    border: 0,\r\n    // Hide scrollbars on Chrome/Safari/IE\r\n    '&::-webkit-scrollbar': {\r\n      display: 'none'\r\n    },\r\n    '-ms-overflow-style': 'none' as any,\r\n    '-webkit-overflow-scrolling': 'auto',\r\n    '&::-webkit-overflow-scrolling': 'auto'\r\n  }\r\n};\r\n\r\nconst tableScrollStyle = {\r\n  border: 0,\r\n  '& .topLeftGrid': {\r\n    border: 0\r\n  },\r\n  '& .topRightGrid': {\r\n    border: 0\r\n  },\r\n  '& .bottomLeftGrid': {\r\n    border: 0\r\n  },\r\n  '& .bottomRightGrid': {\r\n    border: 0,\r\n    // Hide scrollbars on Chrome/Safari/IE\r\n    '&::-webkit-scrollbar': {\r\n      display: 'auto'\r\n    },\r\n    '-ms-overflow-style': 'none' as any,\r\n    '-webkit-overflow-scrolling': 'auto',\r\n    '&::-webkit-overflow-scrolling': 'auto'\r\n  }\r\n};\r\n\r\nconst useStyles = makeStyles(({ palette, spacing, layout }: any) =>\r\n  createStyles({\r\n    table: {\r\n      ...tableStyle\r\n    },\r\n    tableRounded: {\r\n      borderBottomLeftRadius: 12,\r\n      borderBottomRightRadius: 12,\r\n      ...tableStyle\r\n    },\r\n    tableScroll: {\r\n      ...tableScrollStyle\r\n    },\r\n    tableScrollRounded: {\r\n      borderBottomLeftRadius: 12,\r\n      borderBottomRightRadius: 12,\r\n      ...tableScrollStyle\r\n    },\r\n    cellHovered: {\r\n      backgroundColor: palette.primary.light\r\n    },\r\n    cellSelected: {\r\n      color: palette.common.white + ' !important',\r\n      backgroundColor: palette.primary.main\r\n    },\r\n    checkbox: {\r\n      paddingLeft: 0,\r\n      paddingRight: 0\r\n    },\r\n    checkboxIcon: {\r\n      backgroundColor: palette.common.white\r\n    },\r\n    selectedHeader: {\r\n      paddingLeft: spacing(1),\r\n      paddingRight: spacing(1),\r\n      color: palette.common.white,\r\n      backgroundColor: palette.primary.main,\r\n      height: layout.multiselectbarheight,\r\n      marginBottom: layout.contentrowspacing\r\n    },\r\n    cell: {\r\n      //color: palette.secondary.main,\r\n    },\r\n    collapse: {\r\n      background: palette.grey[400]\r\n    }\r\n  })\r\n);\r\n\r\n//If a row data function exists, it returns the results of that, otherwise just the row id\r\nexport function getRowData(selectedRowIds, data) {\r\n  return selectedRowIds\r\n    .map(rid => data.find(d => d.id === rid))\r\n    .filter(row => row)\r\n    .map(row => (row.getRowData ? { ...row.getRowData(row) } : { id: row.id }));\r\n}\r\n\r\nexport default function VirtualTable(props: VirtualTableProps) {\r\n  const classes = useStyles(props);\r\n  const { layout } = useTheme();\r\n  const {\r\n    name,\r\n    includeHeaders = true,\r\n    fixedRowCount = 1,\r\n    rowHeight = layout.tableRowHeight,\r\n    rounded = false,\r\n    hover,\r\n    select,\r\n    checkbox,\r\n    data,\r\n    height,\r\n    columns,\r\n    MultiSelectToolbar,\r\n    showScroll = false\r\n  } = props;\r\n\r\n  const table: TableStore.Table = TableStore.useTable(name);\r\n  const tableUpdate = TableStore.useTableUpdate();\r\n\r\n  const handleSort = (column, sort: SortComparator) => {\r\n    table &&\r\n      tableUpdate({\r\n        id: table.id,\r\n        orderBy: column,\r\n        orderDirection: table.orderDirection === 'asc' ? 'desc' : 'asc',\r\n        sortComparator: sort\r\n      });\r\n  };\r\n\r\n  const sortinjectedcolumns = evalFunc(columns, props).map(c => ({\r\n    ...c,\r\n    onHeaderClick: c.sort ? () => handleSort(c.name, c.sort) : undefined\r\n  })); //;== true && handleSort() }));\r\n  return (\r\n    <div style={{ height: height }}>\r\n      <Component initialState={{ selectedRowIds: [] }}>\r\n        {({ state, setState }) => {\r\n          const selectedRowIds = state.selectedRowIds;\r\n          const length = selectedRowIds.length;\r\n          const itemtxt = length === 0 ? '' : length === 1 ? length + ' item' : length + ' items';\r\n          const adjustedheight = length > 0 ? height - layout.multiselectbarheight - layout.contentrowspacing : height;\r\n          return (\r\n            <AutoSizer>\r\n              {({ width }) => (\r\n                <>\r\n                  <div style={{ width: width }}>\r\n                    <Collapse className={classes.collapse} in={length > 0}>\r\n                      <Grid\r\n                        className={classes.selectedHeader}\r\n                        container\r\n                        direction='row'\r\n                        justify='space-between'\r\n                        alignItems='center'\r\n                        spacing={0}\r\n                      >\r\n                        <Grid item xs zeroMinWidth>\r\n                          <Typography noWrap color='inherit' variant='h5'>\r\n                            {itemtxt}\r\n                          </Typography>\r\n                        </Grid>\r\n                        <Grid item xs>\r\n                          <Grid container justify='flex-end' alignItems='center' alignContent='center'>\r\n                            <Grid item>\r\n                              {length > 0 && MultiSelectToolbar && (\r\n                                <MultiSelectToolbar rowData={getRowData(selectedRowIds, data)} />\r\n                              )}\r\n                            </Grid>\r\n                          </Grid>\r\n                        </Grid>\r\n                      </Grid>\r\n                    </Collapse>\r\n                  </div>\r\n                  <MuiTable\r\n                    cellProps={{\r\n                      size: 'small',\r\n                      style: { paddingLeft: 16, paddingRight: 0 }\r\n                    }}\r\n                    classes={{\r\n                      table: showScroll\r\n                        ? classNames(classes.tableScroll, rounded && classes.tableScrollRounded)\r\n                        : classNames(classes.table, rounded && classes.tableRounded),\r\n                      cellHovered: classes.cellHovered,\r\n                      cellSelected: classes.cellSelected,\r\n                      cell: classes.cell\r\n                    }}\r\n                    fixedRowCount={fixedRowCount}\r\n                    width={width}\r\n                    height={adjustedheight}\r\n                    rowHeight={rowHeight}\r\n                    includeHeaders={includeHeaders}\r\n                    orderBy={table && table.orderBy}\r\n                    orderDirection={table ? table.orderDirection : 'asc'}\r\n                    data={data}\r\n                    columns={\r\n                      checkbox\r\n                        ? [\r\n                            {\r\n                              name: 'checkbox',\r\n                              header: (\r\n                                <Checkbox\r\n                                  checkedIcon={<Icons.CheckBox className={classes.checkboxIcon} color='primary' />}\r\n                                  indeterminateIcon={\r\n                                    <Icons.IndeterminateCheckBox className={classes.checkboxIcon} color='primary' />\r\n                                  }\r\n                                  checked={state.selectedRowIds.filter(rid => data.find(d => d.id === rid)).length > 0}\r\n                                  onChange={e =>\r\n                                    setState(prevState => {\r\n                                      if (\r\n                                        prevState.selectedRowIds.filter(rid => data.find(d => d.id === rid)).length ===\r\n                                        data.length\r\n                                      ) {\r\n                                        // deselect all\r\n                                        return { selectedRowIds: [] };\r\n                                      } else {\r\n                                        // select all\r\n                                        return {\r\n                                          selectedRowIds: data.map(d => d.id)\r\n                                        };\r\n                                      }\r\n                                    })\r\n                                  }\r\n                                  {...(state.selectedRowIds.filter(rid => data.find(d => d.id === rid)).length > 0 &&\r\n                                    state.selectedRowIds.filter(rid => data.find(d => d.id === rid)).length !==\r\n                                      data.length && {\r\n                                      indeterminate: true,\r\n                                      color: 'default'\r\n                                    })}\r\n                                />\r\n                              ),\r\n                              cell: rowData => (\r\n                                <Checkbox\r\n                                  checkedIcon={<Icons.CheckBox className={classes.checkboxIcon} color='primary' />}\r\n                                  checked={state.selectedRowIds\r\n                                    .filter(rid => data.find(d => d.id === rid))\r\n                                    .some(id => rowData.id === id)}\r\n                                />\r\n                              ),\r\n                              cellProps: {\r\n                                style: { paddingLeft: 8, paddingRight: 0 }\r\n                              },\r\n                              width: 48\r\n                            },\r\n                            ...sortinjectedcolumns\r\n                          ]\r\n                        : sortinjectedcolumns\r\n                    }\r\n                    isCellSelected={\r\n                      select\r\n                        ? (column, rowData) => state.selectedRowIds.some(id => rowData && rowData.id === id)\r\n                        : undefined\r\n                    }\r\n                    isCellHovered={\r\n                      hover\r\n                        ? (column, rowData, hoveredColumn, hoveredRowData) =>\r\n                            rowData && rowData.id && rowData.id === hoveredRowData.id\r\n                        : undefined\r\n                    }\r\n                    onCellClick={\r\n                      select\r\n                        ? (event, { column, rowData }) => {\r\n                            setState(prevState => {\r\n                              if (prevState.selectedRowIds.some(id => rowData.id === id)) {\r\n                                // remove\r\n                                return {\r\n                                  selectedRowIds: prevState.selectedRowIds.filter(id => id !== rowData.id)\r\n                                };\r\n                              } else {\r\n                                // add\r\n                                return {\r\n                                  selectedRowIds: [...prevState.selectedRowIds, rowData.id]\r\n                                };\r\n                              }\r\n                            });\r\n                          }\r\n                        : undefined\r\n                    }\r\n                    style={{ backgroundColor: 'white' }}\r\n                  />\r\n                </>\r\n              )}\r\n            </AutoSizer>\r\n          );\r\n        }}\r\n      </Component>\r\n    </div>\r\n  );\r\n}\r\n","import * as React from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { AppState } from '../../../store';\r\nimport TablePlaceHolder from './TablePlaceHolder';\r\nimport VirtualTable, { VirtualTableProps } from './VirtualTable';\r\nimport { Typography, Divider, useTheme, makeStyles, createStyles, Paper, Grid } from '@material-ui/core';\r\n\r\nexport interface GenericTableProps extends VirtualTableProps {\r\n  footer?: boolean;\r\n  elevation?: number;\r\n  placeholder?: string | React.ReactNode;\r\n  selector?(state, props): [];\r\n  length?: number;\r\n}\r\n\r\nconst useStyles = makeStyles(({ palette, spacing, layout }: any) =>\r\n  createStyles({\r\n    placeholder: {\r\n      padding: spacing(1),\r\n      background: palette.grey[50]\r\n    },\r\n    footer: {\r\n      paddingRight: spacing(1),\r\n      background: palette.grey[200],\r\n      border: 8,\r\n      height: layout.tablefooterheight,\r\n      color: palette.text.hint\r\n    },\r\n    paper: ({ rounded }: any) => ({\r\n      borderBottomLeftRadius: rounded ? 4 : 0,\r\n      borderBottomRightRadius: rounded ? 4 : 0\r\n    })\r\n  })\r\n);\r\n\r\nexport default function GenericTable(props: GenericTableProps) {\r\n  const { elevation = 4, placeholder, footer, name, selector, data: Data = [], height: Height, ...other } = props;\r\n  const classes = useStyles(props);\r\n  const { layout } = useTheme();\r\n  const data = useSelector((state: AppState) => (selector ? selector(state, props) : Data));\r\n  const length = data && data.length ? data.length : 0;\r\n  const height = footer ? Height - layout.tablefooterheight : Height;\r\n\r\n  return (\r\n    <Paper elevation={elevation} className={classes.paper}>\r\n      {length === 0 ? (\r\n        <Grid style={{ height: height }} container className={classes.placeholder} alignItems='center' justify='center'>\r\n          <Grid item xs>\r\n            <TablePlaceHolder {...props} />\r\n          </Grid>\r\n          <Grid item xs={12} />\r\n        </Grid>\r\n      ) : (\r\n        <VirtualTable name={name} data={data} height={height} {...other} />\r\n      )}\r\n      {footer && (\r\n        <>\r\n          <Divider />\r\n          <Grid container className={classes.footer} alignContent='center' alignItems='center' justify='flex-end'>\r\n            <Grid item container alignItems='center' justify='flex-end'>\r\n              <Typography align='right' variant='caption'>\r\n                Viewing {length} {name}\r\n              </Typography>\r\n            </Grid>\r\n          </Grid>\r\n        </>\r\n      )}\r\n    </Paper>\r\n  );\r\n}\r\n"],"sourceRoot":""}