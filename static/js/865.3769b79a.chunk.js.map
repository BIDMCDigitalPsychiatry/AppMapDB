{"version":3,"file":"static/js/865.3769b79a.chunk.js","mappings":"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","sources":["components/application/GenericTable/TablePlaceHolder.tsx","components/application/MuiTable/utils.js","components/application/MuiTable/MuiTable.tsx","components/application/GenericTable/VirtualTable.tsx","components/application/GenericTable/ExploreGrid.tsx","components/application/GenericTable/VirtualList.tsx","components/application/GenericTable/GenericTable.tsx"],"sourcesContent":["import * as React from 'react';\nimport { connect } from 'react-redux';\nimport { AppState } from '../../../store';\nimport { Typography } from '@mui/material';\n\nexport interface TablePlaceholderProps {\n  name?: string;\n  tab?: string;\n  placeholder?: string; //optional placeholder text\n  renderPlaceholder?: (props: TablePlaceholderProps) => React.Component;\n  primary?: string;\n  secondary?: string;\n  classes?: any;\n}\n\nconst TablePlaceholder = (props: TablePlaceholderProps) => {\n  const { primary, secondary, renderPlaceholder } = props;\n\n  return renderPlaceholder ? (\n    renderPlaceholder(props)\n  ) : (\n    <>\n      {primary && (\n        <Typography color='textSecondary' variant='subtitle1' style={{ padding: 16 }} align='center'>\n          {primary}\n        </Typography>\n      )}\n      {secondary && (\n        <Typography color='textSecondary' variant='body1' style={{ padding: 16 }} align='center'>\n          {secondary}\n        </Typography>\n      )}\n    </>\n  );\n};\n\nconst mapStateToProps = (state: AppState, ownProp: TablePlaceholderProps): TablePlaceholderProps => {\n  const { name, placeholder } = ownProp;\n  const table = state.table[name];\n  const primary = ownProp.primary || `No ${name}`;\n  const secondary = ownProp.secondary || placeholder;\n  return {\n    ...ownProp,\n    tab: table && table.tab && table.tab,\n    primary,\n    secondary\n  };\n};\n\nexport default connect(mapStateToProps)(TablePlaceholder as any) as any;\n","export function calcColumnWidth(index, columns, tableWidth) {\n  const column = columns[index];\n\n  let width = getDeterministicColumnWidth(column, tableWidth);\n\n  if (width) {\n    return width;\n  }\n\n  const totalAllocatedWidth = columns.reduce(\n    (result, c) => result + (getDeterministicColumnWidth(c, tableWidth) || 0),\n    0\n  );\n\n  // Evenly distribute remaining width amoungst columns (accounting for minWidths)\n  const variableWidthColumns = columns.filter(\n    c => typeof c.width !== 'number' && typeof c.width !== 'string'\n  );\n  const initialDistributedWidthPerColumn =\n    (tableWidth - totalAllocatedWidth) / variableWidthColumns.length;\n  const activeMinWidthColumns = variableWidthColumns.filter(\n    c => (c.minWidth > initialDistributedWidthPerColumn ? c.minWidth : 0)\n  );\n  const allocatedMinWidth = activeMinWidthColumns.reduce(\n    (result, c) => result + c.minWidth,\n    0\n  );\n  const remainingWidth = tableWidth - totalAllocatedWidth - allocatedMinWidth;\n\n  return Math.max(\n    column.minWidth || 0,\n    remainingWidth /\n      (variableWidthColumns.length - activeMinWidthColumns.length)\n  );\n}\n\nfunction getDeterministicColumnWidth(column, tableWidth) {\n  if (typeof column.width === 'number') {\n    // Fixed width\n    return column.width;\n  } else if (typeof column.width === 'string') {\n    // Percentage width\n    const percentageBasedWidth = percentToFixedWidth(column.width, tableWidth);\n    return Math.max(percentageBasedWidth, column.minWidth || 0);\n  } else {\n    // Variable width\n    return null;\n  }\n}\n\nfunction percentToFixedWidth(percentAsString, tableWidth) {\n  return (parseFloat(percentAsString) / 100) * tableWidth;\n}\n","import React from 'react';\nimport MultiGrid from 'react-virtualized/dist/commonjs/MultiGrid';\nimport classNames from 'classnames';\nimport Table from '@mui/material/Table';\nimport TableCell from '@mui/material/TableCell';\nimport TableFooter from '@mui/material/TableFooter';\nimport TablePagination from '@mui/material/TablePagination';\nimport TableSortLabel from '@mui/material/TableSortLabel';\nimport { useTheme } from '@mui/material/styles';\nimport { makeStyles } from '@mui/styles';\nimport Draggable from 'react-draggable';\nimport { calcColumnWidth } from './utils';\n\nconst FOOTER_BORDER_HEIGHT = 1;\n\nconst useStyles = makeStyles(theme => ({\n  table: {\n    boxSizing: 'border-box',\n\n    '& .topLeftGrid': {\n      backgroundColor: theme.palette.grey[theme.palette.mode === 'dark' ? 800 : 200],\n      borderBottom: `2px solid ${theme.palette.divider}`,\n      borderRight: `2px solid ${theme.palette.divider}`,\n      color: theme.palette.text.secondary,\n      fontSize: theme.typography.pxToRem(12),\n\n      // Hide scrollbars on Chrome/Safari/IE\n      '&::-webkit-scrollbar': {\n        display: 'none'\n      },\n      '-ms-overflow-style': 'none'\n    },\n\n    '& .topRightGrid': {\n      backgroundColor: theme.palette.grey[theme.palette.mode === 'dark' ? 800 : 200],\n      borderBottom: `2px solid ${theme.palette.divider}`,\n      color: theme.palette.text.secondary,\n      fontSize: theme.typography.pxToRem(12),\n\n      // Hide scrollbars on Chrome/Safari/IE\n      '&::-webkit-scrollbar': {\n        display: 'none'\n      },\n      '-ms-overflow-style': 'none'\n    },\n\n    '& .bottomLeftGrid': {\n      backgroundColor: theme.palette.grey[theme.palette.mode === 'dark' ? 800 : 200],\n      borderRight: `2px solid ${theme.palette.divider}`,\n      color: theme.palette.text.secondary,\n      fontSize: theme.typography.pxToRem(13),\n\n      // Hide scrollbars on Chrome/Safari/IE\n      '&::-webkit-scrollbar': {\n        display: 'none'\n      },\n      '-ms-overflow-style': 'none'\n    },\n\n    '& .bottomRightGrid': {\n      color: theme.palette.text.primary,\n      fontSize: theme.typography.pxToRem(13),\n      outline: 'none' // See: https://github.com/bvaughn/react-virtualized/issues/381\n    }\n  },\n  cell: {\n    boxSizing: 'border-box',\n    display: 'flex',\n    alignItems: 'center'\n  },\n  cellClickable: {\n    cursor: 'pointer'\n  },\n  cellSelected: {\n    backgroundColor: theme.palette.grey[theme.palette.mode === 'dark' ? 900 : 100]\n  },\n  cellHovered: {\n    backgroundColor: theme.palette.grey[theme.palette.mode === 'dark' ? 800 : 200]\n  },\n  cellDisabled: {\n    opacity: 0.5\n  },\n  cellContents: {\n    width: '100%',\n    whiteSpace: 'nowrap',\n    overflow: 'hidden',\n    textOverflow: 'ellipsis'\n  },\n  cellHeader: {\n    fontSize: theme.typography.pxToRem(12),\n    fontWeight: theme.typography.fontWeightMedium,\n    color: theme.palette.text.secondary\n  },\n  cellInLastColumn: {\n    paddingRight: theme.spacing(3)\n  },\n  cellInLastRow: {\n    borderBottom: 'none'\n  },\n  footer: {\n    borderTop: `${FOOTER_BORDER_HEIGHT}px solid ${theme.palette.divider}`\n  },\n  dragHandle: {\n    flex: '0 0 16px',\n    zIndex: 2,\n    cursor: 'col-resize',\n    color: '#0085ff'\n  },\n  DragHandleActive: {\n    color: '#0b6fcc',\n    zIndex: 3\n  },\n  DragHandleIcon: {\n    flex: '0 0 12px',\n    display: 'flex',\n    flexDirection: 'column',\n    justifyContent: 'center',\n    alignItems: 'center'\n  }\n}));\n\nconst calculateWidths = ({ resizable, columns: Columns }) => {\n  var widths = [];\n  if (resizable) {\n    var initialWidth = 1;\n    var columns = [];\n    Columns.forEach(c => {\n      if (c.width) {\n        widths[c.name] = 0.1;\n        initialWidth = initialWidth - 0.1;\n      } else {\n        columns.push(c);\n      }\n    });\n    columns.forEach(c => {\n      widths[c.name] = initialWidth / columns.length;\n    });\n  }\n  return widths;\n};\n\nconst useCellRenderer = ({\n  recomputeGridSize,\n  columns,\n  width,\n  includeHeaders,\n  data,\n  columnWidth,\n  isCellHovered,\n  isCellSelected,\n  isCellDisabled,\n  classes,\n  orderBy,\n  orderDirection,\n  onHeaderClick,\n  onCellClick,\n  onCellDoubleClick,\n  onCellContextMenu,\n  resizable,\n  cellProps: defaultCellProps\n}) => {\n  const [{ hoveredColumn, hoveredRowData }, setHovered] = React.useState({\n    hoveredColumn: null,\n    hoveredRowData: null\n  });\n\n  const [widths, setWidths] = React.useState(calculateWidths({ resizable, columns }));\n\n  React.useEffect(() => {\n    recomputeGridSize();\n  }, [recomputeGridSize, hoveredColumn, hoveredRowData, widths]);\n\n  const resizableColumnWidths = React.useCallback((index, columns, tableWidth) => widths[columns[index].name] * tableWidth, [widths]);\n\n  const getColumnWidth = React.useCallback(\n    ({ index }) =>\n      typeof columnWidth === 'function'\n        ? columnWidth({ index, columns, width })\n        : resizable\n        ? resizableColumnWidths(index, columns, width)\n        : calcColumnWidth(index, columns, width),\n    [columnWidth, resizable, columns, width, resizableColumnWidths]\n  );\n\n  const resizeRow = React.useCallback(\n    ({ dataKey, deltaX }) =>\n      setWidths(prev => {\n        const delta = deltaX / width;\n        const index = columns.findIndex(c => c.name === dataKey);\n        const nextDataKey = columns[index + 1].name;\n        return {\n          ...prev,\n          [dataKey]: prev[dataKey] + delta,\n          [nextDataKey]: prev[nextDataKey] - delta\n        };\n      }),\n    [setWidths, columns, width]\n  );\n\n  const handleDrag = React.useCallback(\n    dataKey =>\n      (event, { deltaX }) =>\n        resizeRow({\n          dataKey,\n          deltaX\n        }),\n    [resizeRow]\n  );\n\n  const handleMouse = React.useCallback(\n    (hoveredColumn, hoveredRowData) => e =>\n      setHovered({\n        hoveredColumn,\n        hoveredRowData\n      }),\n    [setHovered]\n  );\n\n  const cellRenderer = ({ columnIndex, rowIndex, key, style }) => {\n    const column = columns[columnIndex];\n    const isHeader = includeHeaders && rowIndex === 0;\n    const headerOffset = includeHeaders ? 1 : 0;\n    const rowData = (data && data[rowIndex - headerOffset]) || {};\n\n    const isSelected = isCellSelected && isCellSelected(column, rowData);\n    const isDisabled = isCellDisabled && isCellDisabled(column, rowData);\n\n    const isHovered = hoveredColumn && hoveredRowData && isCellHovered && isCellHovered(column, rowData, hoveredColumn, hoveredRowData);\n\n    const resolveCellProps = cellProps => (typeof cellProps === 'function' ? cellProps(column, rowData, hoveredColumn, hoveredRowData) : cellProps);\n    // TODO: Deep merge (do not override all defaultCellProps styles if column.cellProps.styles defined?)\n    const { style: cellStyle = undefined, ...cellProps } = {\n      ...resolveCellProps(defaultCellProps),\n      ...resolveCellProps(column.cellProps)\n    };\n\n    const contents = (\n      <div className={classes.cellContents}>\n        <span style={{ flex: 'auto' }}>\n          {isHeader ? (column.header != null ? column.header : column.name) : column.cell ? column.cell(rowData) : rowData[column.name]}\n        </span>\n        <span style={{ float: 'right' }}>\n          {isHeader && resizable && columnIndex < columns.length - 1 && (\n            // @ts-ignore\n            <Draggable\n              axis='x'\n              defaultClassName={classes.dragHandle}\n              defaultClassNameDragging={classes.DragHandleActive}\n              onDrag={handleDrag(column.name)}\n              position={{ x: 0, y: undefined }}\n            >\n              <span className={classes.DragHandleIcon}>⋮</span>\n            </Draggable>\n          )}\n        </span>\n      </div>\n    );\n\n    const hasCellClick = !isHeader && onCellClick;\n    const hasCellDoubleClick = !isHeader && onCellDoubleClick;\n    const hasCellContextMenu = !isHeader && onCellContextMenu;\n    const isClickable = hasCellClick || hasCellDoubleClick || hasCellContextMenu || column.onClick;\n\n    const className = classNames(classes.cell, {\n      [classes.cellClickable]: isClickable,\n      [classes.cellHovered]: isHovered,\n      [classes.cellSelected]: isSelected,\n      [classes.cellDisabled]: isDisabled,\n      [classes.cellHeader]: isHeader,\n      [classes.cellInLastColumn]: columnIndex === columns.length - 1,\n      [classes.cellInLastRow]: !isHeader && rowIndex === (data ? data.length : 0)\n    });\n\n    return (\n      <TableCell\n        component='div'\n        className={className}\n        key={key}\n        onMouseEnter={handleMouse(column, rowData)}\n        onMouseLeave={handleMouse(null, null)}\n        style={{\n          ...style,\n          ...cellStyle\n        }}\n        {...(hasCellClick && {\n          onClick: event => onCellClick(event, { column, rowData, data })\n        })} // Can be overridden by cellProps.onClick on column definition\n        {...(hasCellDoubleClick && {\n          onDoubleClick: event => onCellDoubleClick(event, { column, rowData, data })\n        })} // Can be overridden by cellProps.onDoubleClick on column definition\n        {...(hasCellContextMenu && {\n          onContextMenu: event => onCellContextMenu(event, { column, rowData, data })\n        })} // Can be overridden by cellProps.onContextMenu on column definition\n        {...cellProps}\n      >\n        {isHeader && column.onHeaderClick !== false && (column.onHeaderClick || onHeaderClick) ? (\n          <TableSortLabel\n            active={orderBy && (orderBy === column.name || orderBy === column.orderBy) && rowIndex === 0}\n            style={{ width: 'inherit' }} // fix text overflowing\n            direction={orderDirection}\n            onClick={event => (column.onHeaderClick ? column.onHeaderClick(event, { column }) : onHeaderClick(event, { column }))}\n          >\n            {contents}\n          </TableSortLabel>\n        ) : isHeader && column.resizable ? (\n          <React.Fragment>\n            {contents}\n            {\n              // @ts-ignore\n              <Draggable\n                axis='x'\n                defaultClassName='DragHandle'\n                defaultClassNameDragging='DragHandleActive'\n                onDrag={handleDrag(column.name)}\n                position={{ x: 0, y: undefined }}\n              >\n                <span className='DragHandleIcon'>⋮</span>\n              </Draggable>\n            }\n          </React.Fragment>\n        ) : (\n          contents\n        )}\n      </TableCell>\n    );\n  };\n\n  return { cellRenderer, columnWidth: getColumnWidth };\n};\n\nexport default function MuiTable({\n  data = [],\n  columns = [],\n  width = undefined,\n  height = undefined,\n  maxHeight = null,\n  pagination = undefined,\n  fitHeightToRows = undefined,\n  fixedRowCount = 0,\n  fixedColumnCount = 0,\n  rowHeight = 48,\n  style = undefined,\n  columnWidth = undefined,\n  includeHeaders = false,\n  isCellHovered = undefined,\n  isCellSelected = undefined,\n  isCellDisabled = undefined,\n  classes: Classes = undefined,\n  orderBy = undefined,\n  orderDirection = undefined,\n  onHeaderClick = undefined,\n  onCellClick = undefined,\n  onCellDoubleClick = undefined,\n  onCellContextMenu = undefined,\n  resizable = undefined,\n  cellProps = undefined,\n  ...other\n}) {\n  const classes = useStyles({ classes: Classes });\n  const theme = useTheme();\n\n  const multiGrid = React.useRef(null);\n\n  const recomputeGridSize = React.useCallback(() => multiGrid.current && multiGrid.current.recomputeGridSize(), [multiGrid]);\n\n  React.useEffect(() => {\n    recomputeGridSize();\n  }, [columns, data, height, width, recomputeGridSize]);\n\n  let calculatedHeight = 0;\n  if (height) {\n    calculatedHeight = height; // fixed height\n  } else if (pagination && pagination.rowsPerPage && !fitHeightToRows) {\n    const rowCount = pagination.rowsPerPage + (fixedRowCount ? fixedRowCount : includeHeaders ? 1 : 0);\n    calculatedHeight = rowCount * rowHeight;\n  } else if (Array.isArray(data)) {\n    const rowCount = data.length + (fixedRowCount ? fixedRowCount : includeHeaders ? 1 : 0);\n    calculatedHeight = rowCount * rowHeight;\n  }\n\n  const paginationHeight = Number(theme.mixins.toolbar.minHeight) + FOOTER_BORDER_HEIGHT;\n\n  const calculatedHeightWithFooter = calculatedHeight + (pagination ? paginationHeight : 0);\n  const containerHeight = maxHeight != null ? Math.min(calculatedHeightWithFooter, maxHeight) : calculatedHeightWithFooter;\n  const multiGridHeight = containerHeight - (pagination ? paginationHeight : 0);\n\n  return (\n    <Table component='div' style={{ width, height: containerHeight, ...style }} className={classes.table} {...other}>\n      <MultiGrid\n        {...useCellRenderer({\n          recomputeGridSize,\n          data,\n          columns,\n          width,\n          classes,\n          includeHeaders,\n          columnWidth,\n          isCellHovered,\n          isCellSelected,\n          isCellDisabled,\n          orderBy,\n          orderDirection,\n          onHeaderClick,\n          onCellClick,\n          onCellDoubleClick,\n          onCellContextMenu,\n          resizable,\n          cellProps\n        })}\n        ref={multiGrid}\n        width={width}\n        columnCount={Array.isArray(columns) ? columns.length : 0}\n        fixedColumnCount={fixedColumnCount}\n        enableFixedColumnScroll={fixedColumnCount > 0}\n        height={multiGridHeight}\n        rowHeight={rowHeight}\n        rowCount={Array.isArray(data) ? data.length + (includeHeaders ? 1 : 0) : 0}\n        fixedRowCount={fixedRowCount}\n        enableFixedRowScroll={fixedRowCount > 0}\n        // TODO: Read these from `classes` without classes.table inheritance?  How to pass props.classes down to override?\n        classNameTopLeftGrid={'topLeftGrid'}\n        classNameTopRightGrid={'topRightGrid'}\n        classNameBottomLeftGrid={'bottomLeftGrid'}\n        classNameBottomRightGrid={'bottomRightGrid'}\n      />\n      {pagination && (\n        <TableFooter component='div' className={classes.footer}>\n          <TablePagination component='div' {...pagination} />\n        </TableFooter>\n      )}\n    </Table>\n  );\n}\n","import * as React from 'react';\nimport * as Icons from '@mui/icons-material';\nimport { useTheme, Typography, Collapse, Checkbox, Grid } from '@mui/material';\nimport makeStyles from '@mui/styles/makeStyles';\nimport createStyles from '@mui/styles/createStyles';\nimport MuiTable from '../MuiTable/MuiTable';\nimport AutoSizer from 'react-virtualized/dist/commonjs/AutoSizer';\nimport Component from '@reactions/component';\nimport classNames from 'classnames';\nimport * as TableStore from './store';\nimport { SortComparator } from './helpers';\nimport { evalFunc } from '../../../helpers';\n\nexport interface VirtualTableProps {\n  name?: string;\n  height?: number;\n  checkbox?: boolean;\n  hover?: boolean;\n  onCellClick?: (event, props) => any;\n  onHeaderClick?: (event, props) => any;\n  isCellHovered?: (column, rowData, hoveredColumn, hoveredRowData) => boolean;\n  select?: boolean;\n  columns?: any[] | ((props?) => any[]);\n  data?: any[];\n  MultiSelectToolbar?: any;\n  rounded?: boolean;\n  rowHeight?: number;\n  includeHeaders?: boolean;\n  fixedRowCount?: number;\n  fixedColumnCount?: number;\n  showScroll?: boolean;\n  rowDivider?: boolean;\n}\n\nconst gridStyle = {\n  border: 0,\n  'scrollbar-width': 'none' /* Firefox 64 */\n};\n\nconst sharedTableStyle = {\n  border: 0,\n  '& .topLeftGrid': gridStyle,\n  '& .topRightGrid': gridStyle,\n  '& .bottomLeftGrid': gridStyle\n};\n\nconst tableStyle = {\n  ...sharedTableStyle,\n  '& .bottomRightGrid': {\n    border: 0,\n    // Hide scrollbars on Chrome/Safari/IE\n    '&::-webkit-scrollbar': {\n      display: 'none'\n    },\n    'scrollbar-width': 'none' /* Firefox 64 */,\n    '-ms-overflow-style': 'none' as any,\n    '-webkit-overflow-scrolling': 'auto',\n    '&::-webkit-overflow-scrolling': 'auto'\n  }\n};\n\nexport const tableScrollStyle = ({ palette }) => ({\n  ...sharedTableStyle,\n  '& .bottomRightGrid': {\n    '&::-webkit-scrollbar': {\n      display: 'auto',\n      width: 6,\n      height: 6\n    },\n    '&::-webkit-scrollbar-thumb': {\n      // Works on chrome only\n      backgroundColor: palette.primary.light,\n      borderRadius: 25\n    },\n    border: 0,\n    '-ms-overflow-style': 'none' as any,\n    '-webkit-overflow-scrolling': 'auto',\n    '&::-webkit-overflow-scrolling': 'auto'\n  }\n});\n\nconst useStyles = makeStyles(({ palette, spacing, layout }: any) =>\n  createStyles({\n    table: {\n      ...tableStyle\n    },\n    tableRounded: {\n      borderBottomLeftRadius: 12,\n      borderBottomRightRadius: 12,\n      ...tableStyle\n    },\n    tableScroll: {\n      ...tableScrollStyle({ palette })\n    },\n    tableScrollRounded: {\n      borderBottomLeftRadius: 12,\n      borderBottomRightRadius: 12,\n      ...tableScrollStyle({ palette })\n    },\n    cellHovered: {\n      backgroundColor: palette.primary.light\n    },\n    cellSelected: {\n      color: palette.common.white + ' !important',\n      backgroundColor: palette.primary.main\n    },\n    checkbox: {\n      paddingLeft: 0,\n      paddingRight: 0\n    },\n    checkboxIcon: {\n      backgroundColor: palette.common.white\n    },\n    selectedHeader: {\n      paddingLeft: spacing(1),\n      //paddingRight: spacing(1),\n      color: palette.common.white,\n      backgroundColor: palette.primary.main,\n      height: layout.multiselectbarheight,\n      marginBottom: layout.contentrowspacing\n    },\n    cell: {\n      //color: palette.secondary.main,\n    },\n    collapse: {\n      background: palette.grey[400]\n    }\n  })\n);\n\n//If a row data function exists, it returns the results of that, otherwise just the row id\nexport function getRowData(selectedRowIds, data) {\n  return selectedRowIds\n    .map(rid => data.find(d => d.id === rid))\n    .filter(row => row)\n    .map(row => (row.getRowData ? { ...row.getRowData(row) } : { id: row.id }));\n}\n\nconst defaultState = { selectedRowIds: [] };\n\nexport default function VirtualTable(props: VirtualTableProps) {\n  const classes = useStyles(props);\n  const { layout } = useTheme() as any;\n  const {\n    name,\n    includeHeaders = true,\n    fixedRowCount = 1,\n    fixedColumnCount = 0,\n    rowHeight = layout.tableRowHeight,\n    rounded = false,\n    hover,\n    onCellClick = undefined,\n    onHeaderClick = undefined,\n    isCellHovered = undefined,\n    select,\n    checkbox,\n    data,\n    height,\n    columns,\n    MultiSelectToolbar,\n    showScroll = false,\n    rowDivider = true\n  } = props;\n\n  const table: TableStore.Table = TableStore.useTable(name);\n  const tableUpdate = TableStore.useTableUpdate();\n\n  const handleSort = (column, sort: SortComparator) => {\n    table &&\n      tableUpdate({\n        id: table.id,\n        orderBy: column,\n        orderDirection: table.orderDirection === 'asc' ? 'desc' : 'asc',\n        sortComparator: sort\n      });\n  };\n\n  const sortinjectedcolumns = evalFunc(columns, props).map(c => ({\n    ...c,\n    onHeaderClick: c.sort\n      ? (event, props) => {\n          handleSort(c.name, c.sort);\n          onHeaderClick && onHeaderClick(event, props);\n        }\n      : onHeaderClick\n  })); //;== true && handleSort() }));\n  return (\n    <div style={{ height: height }}>\n      <Component initialState={defaultState}>\n        {({ state, setState }) => {\n          const selectedRowIds = state.selectedRowIds;\n          const length = selectedRowIds.length;\n          const itemtxt = length === 0 ? '' : length === 1 ? length + ' item' : length + ' items';\n          const adjustedheight = length > 0 ? height - layout.tabletoolbarheight - layout.contentrowspacing : height;\n          const handleReset = () => setState(defaultState);\n          return (\n            <AutoSizer>\n              {({ width }) => (\n                <>\n                  <div style={{ width: width }}>\n                    <Collapse className={classes.collapse} in={length > 0}>\n                      <Grid className={classes.selectedHeader} container direction='row' justifyContent='space-between' alignItems='center' spacing={0}>\n                        <Grid item xs zeroMinWidth>\n                          <Typography noWrap color='inherit' variant='h5'>\n                            {itemtxt}\n                          </Typography>\n                        </Grid>\n                        <Grid item xs>\n                          <Grid container justifyContent='flex-end' alignItems='center' alignContent='center'>\n                            <Grid item>\n                              {length > 0 && MultiSelectToolbar && <MultiSelectToolbar handleReset={handleReset} rowData={getRowData(selectedRowIds, data)} />}\n                            </Grid>\n                          </Grid>\n                        </Grid>\n                      </Grid>\n                    </Collapse>\n                  </div>\n                  <MuiTable\n                    cellProps={{\n                      size: 'small',\n                      style: { paddingLeft: 16, paddingRight: 0, borderBottom: rowDivider === false ? 0 : undefined }\n                    }}\n                    classes={{\n                      table: showScroll\n                        ? classNames(classes.tableScroll, rounded && classes.tableScrollRounded)\n                        : classNames(classes.table, rounded && classes.tableRounded),\n                      cellHovered: classes.cellHovered,\n                      cellSelected: classes.cellSelected,\n                      cell: classes.cell\n                    }}\n                    fixedRowCount={fixedRowCount}\n                    fixedColumnCount={fixedColumnCount}\n                    width={width}\n                    height={adjustedheight}\n                    rowHeight={rowHeight}\n                    includeHeaders={includeHeaders}\n                    orderBy={table && table.orderBy}\n                    orderDirection={table ? table.orderDirection : 'asc'}\n                    data={data}\n                    columns={\n                      checkbox\n                        ? [\n                            {\n                              name: 'checkbox',\n                              header: (\n                                <Checkbox\n                                  checkedIcon={<Icons.CheckBox className={classes.checkboxIcon} color='primary' />}\n                                  indeterminateIcon={<Icons.IndeterminateCheckBox className={classes.checkboxIcon} color='primary' />}\n                                  checked={state.selectedRowIds.filter(rid => data.find(d => d.id === rid)).length > 0}\n                                  onChange={e =>\n                                    setState(prevState => {\n                                      if (prevState.selectedRowIds.filter(rid => data.find(d => d.id === rid)).length === data.length) {\n                                        // deselect all\n                                        return { selectedRowIds: [] };\n                                      } else {\n                                        // select all\n                                        return {\n                                          selectedRowIds: data.map(d => d.id)\n                                        };\n                                      }\n                                    })\n                                  }\n                                  {...(state.selectedRowIds.filter(rid => data.find(d => d.id === rid)).length > 0 &&\n                                    state.selectedRowIds.filter(rid => data.find(d => d.id === rid)).length !== data.length && {\n                                      indeterminate: true,\n                                      color: 'default'\n                                    })}\n                                />\n                              ),\n                              cell: rowData => (\n                                <Checkbox\n                                  checkedIcon={<Icons.CheckBox className={classes.checkboxIcon} color='primary' />}\n                                  checked={state.selectedRowIds.filter(rid => data.find(d => d.id === rid)).some(id => rowData.id === id)}\n                                />\n                              ),\n                              cellProps: {\n                                style: { paddingLeft: 8, paddingRight: 0 }\n                              },\n                              width: 48\n                            },\n                            ...sortinjectedcolumns\n                          ]\n                        : sortinjectedcolumns\n                    }\n                    isCellSelected={select ? (column, rowData) => state.selectedRowIds.some(id => rowData && rowData.id === id) : undefined}\n                    isCellHovered={\n                      isCellHovered || hover\n                        ? (column, rowData, hoveredColumn, hoveredRowData) =>\n                            isCellHovered\n                              ? isCellHovered(column, rowData, hoveredColumn, hoveredRowData)\n                              : rowData && rowData.id && rowData.id === hoveredRowData.id\n                        : undefined\n                    }\n                    onHeaderClick={onHeaderClick}\n                    onCellClick={\n                      onCellClick\n                        ? onCellClick\n                        : select\n                        ? (event, { column, rowData }) => {\n                            setState(prevState => {\n                              if (prevState.selectedRowIds.some(id => rowData.id === id)) {\n                                // remove\n                                return {\n                                  selectedRowIds: prevState.selectedRowIds.filter(id => id !== rowData.id)\n                                };\n                              } else {\n                                // add\n                                return {\n                                  selectedRowIds: [...prevState.selectedRowIds, rowData.id]\n                                };\n                              }\n                            });\n                          }\n                        : undefined\n                    }\n                    style={{ backgroundColor: 'white' }}\n                  />\n                </>\n              )}\n            </AutoSizer>\n          );\n        }}\n      </Component>\n    </div>\n  );\n}\n","import ExploreGridItem from './ApplicationsGrid/ApplicationsGridItem';\nimport { VirtuosoGrid } from 'react-virtuoso';\nimport styled from '@emotion/styled';\n\nconst ItemContainer = styled.div`\n  padding: 0.5rem;\n  width: 25%;\n  display: flex;\n  flex: none;\n  align-content: stretch;\n\n  @media (max-width: 1300px) {\n    width: 33%;\n  }\n\n  @media (max-width: 1200px) {\n    width: 50%;\n  }\n\n  @media (max-width: 550px) {\n    width: 100%;\n  }\n`;\n\nconst ListContainer = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n`;\n\nexport default function ExploreGrid({ data, height, GridItem = undefined, scrollElement = undefined }) {\n  GridItem === undefined && console.error('Must provide the GridItem component');\n  return (\n    <VirtuosoGrid\n      customScrollParent={scrollElement}\n      totalCount={data.length}\n      style={{ height: scrollElement ? undefined : height }}\n      components={{\n        Item: ItemContainer,\n        List: ListContainer as any,\n        ScrollSeekPlaceholder: ({ height, width, index }) => (\n          <ItemContainer>\n            <ExploreGridItem>--</ExploreGridItem>\n          </ItemContainer>\n        )\n      }}\n      itemContent={index => {\n        const item = data[index] ?? {};\n        const values = item.getValues ? item.getValues() : item;\n        return values && <GridItem index={index} {...values} />;\n      }}\n    />\n  );\n}\n","import * as React from 'react';\nimport { useTheme } from '@mui/material';\nimport AutoSizer from 'react-virtualized/dist/commonjs/AutoSizer';\nimport Component from '@reactions/component';\nimport { evalFunc } from '../../../helpers';\nimport { CellMeasurer, CellMeasurerCache, List } from 'react-virtualized';\n\nexport interface VirtualListProps {\n  name?: string;\n  height?: number;\n  columns?: any[] | ((props?) => any[]);\n  data?: any[];\n  rowHeight?: number;\n}\n\nexport default function VirtualList(props: VirtualListProps) {\n  const { layout } = useTheme() as any;\n  const { rowHeight = layout.tableRowHeight, data, columns, height } = props;\n\n  const sortinjectedcolumns = evalFunc(columns, props);\n\n  return (\n    <div style={{ height: height }}>\n      <Component initialState={{ selectedRowIds: [] }}>\n        {({ state }) => {\n          const selectedRowIds = state.selectedRowIds;\n          const length = selectedRowIds.length;\n          const adjustedheight = length > 0 ? height - layout.multiselectbarheight - layout.contentrowspacing : height;\n          return (\n            <AutoSizer>\n              {({ width }) => <DynamicList data={data} rowHeight={rowHeight} width={width as any} height={adjustedheight} columns={sortinjectedcolumns} />}\n            </AutoSizer>\n          );\n        }}\n      </Component>\n    </div>\n  );\n}\n\nconst DynamicList = props => {\n  const { height, width, data, columns, rowHeight = 50, getClassName } = props as any;\n\n  const handleRefresh = () => {\n    setCache(\n      new CellMeasurerCache({\n        fixedWidth: true,\n        minHeight: rowHeight\n      })\n    );\n  };\n\n  React.useEffect(() => {\n    setCache(\n      new CellMeasurerCache({\n        fixedWidth: true,\n        minHeight: rowHeight\n      })\n    );\n  }, [data, columns, getClassName, height, rowHeight, width]);\n\n  const [cache, setCache] = React.useState(\n    new CellMeasurerCache({\n      fixedWidth: true,\n      minHeight: props.rowHeight ?? 50\n    })\n  );\n\n  const _rowRenderer = ({ index, key, parent, style }) => {\n    const classNames = getClassName && getClassName({ columnIndex: 0, rowIndex: index });\n    return (\n      <CellMeasurer cache={cache} columnIndex={0} key={key} rowIndex={index} parent={parent}>\n        {({ measure, registerChild }) => (\n          <div ref={registerChild} className={classNames} style={style}>\n            {columns[0].cell({ ...data[index], handleRefresh }, columns[0])}\n          </div>\n        )}\n      </CellMeasurer>\n    );\n  };\n\n  return (\n    <List\n      deferredMeasurementCache={cache}\n      height={height}\n      overscanRowCount={0}\n      rowCount={data.length}\n      rowHeight={cache.rowHeight}\n      rowRenderer={_rowRenderer}\n      width={width}\n    />\n  );\n};\n","import * as React from 'react';\nimport { useSelector } from 'react-redux';\nimport { AppState } from '../../../store';\nimport TablePlaceHolder from './TablePlaceHolder';\nimport VirtualTable, { VirtualTableProps } from './VirtualTable';\nimport { Typography, Divider, useTheme, Paper, Grid } from '@mui/material';\nimport makeStyles from '@mui/styles/makeStyles';\nimport createStyles from '@mui/styles/createStyles';\nimport ExploreGrid from './ExploreGrid';\nimport VirtualList from './VirtualList';\n\nexport interface GenericTableProps extends VirtualTableProps {\n  footer?: boolean;\n  elevation?: number;\n  placeholder?: string | React.ReactNode;\n  selector?(state, props): [];\n  length?: number;\n  isGrid?: boolean;\n  isList?: boolean;\n}\n\nconst useStyles = makeStyles(({ palette, spacing, layout }: any) =>\n  createStyles({\n    placeholder: {\n      padding: spacing(1),\n      background: palette.grey[50]\n    },\n    footer: {\n      paddingRight: spacing(1),\n      background: palette.grey[200],\n      border: 8,\n      height: layout.tablefooterheight,\n      color: palette.text.hint\n    },\n    paper: ({ rounded }: any) => ({\n      borderBottomLeftRadius: rounded ? 4 : 0,\n      borderBottomRightRadius: rounded ? 4 : 0\n    })\n  })\n);\n\nexport default function GenericTable(props: GenericTableProps) {\n  const { elevation = 4, placeholder, footer, name, selector, data: Data = [], height: Height, isList, isGrid, ...other } = props;\n  const classes = useStyles(props);\n  const { layout } = useTheme() as any;\n  const data = useSelector((state: AppState) => (selector ? selector(state, props) : Data));\n  const length = data && data.length ? data.length : 0;\n  const height = footer ? (Height ? Height - layout.tablefooterheight : Height) : Height;\n\n  const VirtualComponent = isList ? VirtualList : isGrid ? ExploreGrid : VirtualTable;\n\n  return (\n    <Paper elevation={elevation} className={classes.paper}>\n      {length === 0 ? (\n        <Grid style={{ height: height }} container className={classes.placeholder} alignItems='center' justifyContent='center'>\n          <Grid item xs>\n            <TablePlaceHolder {...props} />\n          </Grid>\n          <Grid item xs={12} />\n        </Grid>\n      ) : (\n        <VirtualComponent name={name} data={data} height={height} {...other} />\n      )}\n      {footer && (\n        <>\n          <Divider />\n          <Grid container className={classes.footer} alignContent='center' alignItems='center' justifyContent='flex-end'>\n            <Grid item container alignItems='center' justifyContent='flex-end'>\n              <Typography align='right' variant='caption'>\n                Viewing {length} {name}\n              </Typography>\n            </Grid>\n          </Grid>\n        </>\n      )}\n    </Paper>\n  );\n}\n"],"names":["connect","mapStateToProps","state","ownProp","name","placeholder","table","primary","concat","secondary","tab","props","renderPlaceholder","_jsxs","_Fragment","children","_jsx","Typography","color","variant","style","padding","align","getDeterministicColumnWidth","column","tableWidth","width","percentageBasedWidth","percentAsString","parseFloat","percentToFixedWidth","Math","max","minWidth","FOOTER_BORDER_HEIGHT","useStyles","makeStyles","theme","boxSizing","backgroundColor","palette","grey","mode","borderBottom","divider","borderRight","text","fontSize","typography","pxToRem","display","outline","cell","alignItems","cellClickable","cursor","cellSelected","cellHovered","cellDisabled","opacity","cellContents","whiteSpace","overflow","textOverflow","cellHeader","fontWeight","fontWeightMedium","cellInLastColumn","paddingRight","spacing","cellInLastRow","footer","borderTop","dragHandle","flex","zIndex","DragHandleActive","DragHandleIcon","flexDirection","justifyContent","useCellRenderer","_ref2","recomputeGridSize","columns","includeHeaders","data","columnWidth","isCellHovered","isCellSelected","isCellDisabled","classes","orderBy","orderDirection","onHeaderClick","onCellClick","onCellDoubleClick","onCellContextMenu","resizable","cellProps","defaultCellProps","hoveredColumn","hoveredRowData","setHovered","React","widths","setWidths","_ref","Columns","initialWidth","forEach","c","push","length","calculateWidths","resizableColumnWidths","index","getColumnWidth","_ref3","totalAllocatedWidth","reduce","result","variableWidthColumns","filter","initialDistributedWidthPerColumn","activeMinWidthColumns","allocatedMinWidth","remainingWidth","calcColumnWidth","resizeRow","_ref4","dataKey","deltaX","prev","delta","findIndex","nextDataKey","handleDrag","event","_ref5","handleMouse","e","cellRenderer","_ref6","columnIndex","rowIndex","key","isHeader","rowData","isSelected","isDisabled","isHovered","resolveCellProps","cellStyle","contents","className","header","float","Draggable","axis","defaultClassName","defaultClassNameDragging","onDrag","position","x","y","undefined","hasCellClick","hasCellDoubleClick","hasCellContextMenu","isClickable","onClick","classNames","TableCell","component","onMouseEnter","onMouseLeave","onDoubleClick","onContextMenu","TableSortLabel","active","direction","MuiTable","_ref7","height","maxHeight","pagination","fitHeightToRows","fixedRowCount","fixedColumnCount","rowHeight","Classes","other","useTheme","multiGrid","current","calculatedHeight","rowsPerPage","Array","isArray","paginationHeight","Number","mixins","toolbar","minHeight","calculatedHeightWithFooter","containerHeight","min","multiGridHeight","Table","MultiGrid","ref","columnCount","enableFixedColumnScroll","rowCount","enableFixedRowScroll","classNameTopLeftGrid","classNameTopRightGrid","classNameBottomLeftGrid","classNameBottomRightGrid","TableFooter","TablePagination","gridStyle","border","sharedTableStyle","tableStyle","tableScrollStyle","light","borderRadius","layout","createStyles","tableRounded","borderBottomLeftRadius","borderBottomRightRadius","tableScroll","tableScrollRounded","common","white","main","checkbox","paddingLeft","checkboxIcon","selectedHeader","multiselectbarheight","marginBottom","contentrowspacing","collapse","background","getRowData","selectedRowIds","map","rid","find","d","id","row","defaultState","VirtualTable","tableRowHeight","rounded","hover","select","MultiSelectToolbar","showScroll","rowDivider","TableStore","tableUpdate","sortinjectedcolumns","evalFunc","sort","handleSort","sortComparator","Component","initialState","setState","itemtxt","adjustedheight","tabletoolbarheight","handleReset","AutoSizer","Collapse","in","Grid","container","item","xs","zeroMinWidth","noWrap","alignContent","size","Checkbox","checkedIcon","Icons","indeterminateIcon","checked","onChange","prevState","indeterminate","some","ItemContainer","styled","div","_templateObject","_taggedTemplateLiteral","ListContainer","_templateObject2","ExploreGrid","GridItem","scrollElement","console","error","VirtuosoGrid","customScrollParent","totalCount","components","Item","List","ScrollSeekPlaceholder","ExploreGridItem","itemContent","_data$index","values","getValues","VirtualList","DynamicList","_props$rowHeight","getClassName","handleRefresh","setCache","CellMeasurerCache","fixedWidth","cache","deferredMeasurementCache","overscanRowCount","rowRenderer","parent","CellMeasurer","measure","registerChild","tablefooterheight","hint","paper","GenericTable","elevation","selector","Data","Height","isList","isGrid","useSelector","VirtualComponent","Paper","TablePlaceHolder","Divider"],"sourceRoot":""}