{"version":3,"sources":["components/application/GenericTable/TablePlaceHolder.tsx","components/application/GenericTable/VirtualTable.tsx","components/application/GenericTable/VirtualList.tsx","components/application/GenericTable/GenericTable.tsx"],"names":["connect","state","ownProp","name","placeholder","table","primary","secondary","tab","props","renderPlaceholder","Typography","color","variant","style","padding","align","gridStyle","border","sharedTableStyle","tableStyle","display","tableScrollStyle","palette","width","height","backgroundColor","light","borderRadius","useStyles","makeStyles","spacing","layout","createStyles","tableRounded","borderBottomLeftRadius","borderBottomRightRadius","tableScroll","tableScrollRounded","cellHovered","cellSelected","common","white","main","checkbox","paddingLeft","paddingRight","checkboxIcon","selectedHeader","multiselectbarheight","marginBottom","contentrowspacing","cell","collapse","background","grey","getRowData","selectedRowIds","data","map","rid","find","d","id","filter","row","VirtualTable","classes","useTheme","includeHeaders","fixedRowCount","rowHeight","tableRowHeight","rounded","hover","select","columns","MultiSelectToolbar","showScroll","rowDivider","TableStore","tableUpdate","sortinjectedcolumns","evalFunc","c","onHeaderClick","sort","column","orderBy","orderDirection","sortComparator","undefined","initialState","setState","length","itemtxt","adjustedheight","Collapse","className","in","Grid","container","direction","justify","alignItems","item","xs","zeroMinWidth","noWrap","alignContent","rowData","cellProps","size","borderBottom","classNames","header","Checkbox","checkedIcon","indeterminateIcon","checked","onChange","e","prevState","indeterminate","some","isCellSelected","isCellHovered","hoveredColumn","hoveredRowData","onCellClick","event","VirtualList","DynamicList","getClassName","handleRefresh","setCache","CellMeasurerCache","fixedWidth","minHeight","React","cache","deferredMeasurementCache","overscanRowCount","rowCount","rowRenderer","index","key","parent","columnIndex","rowIndex","measure","registerChild","ref","footer","tablefooterheight","text","hint","paper","GenericTable","elevation","selector","Data","Height","isList","other","useSelector","VirtualComponent","Paper","TablePlaceHolder","Divider"],"mappings":"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","file":"static/js/4.b1c77836.chunk.js","sourcesContent":["import * as React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { AppState } from '../../../store';\r\nimport { Typography } from '@material-ui/core';\r\n\r\nexport interface TablePlaceholderProps {\r\n  name?: string;\r\n  tab?: string;\r\n  placeholder?: string; //optional placeholder text\r\n  renderPlaceholder?: (props: TablePlaceholderProps) => React.Component;\r\n  primary?: string;\r\n  secondary?: string;\r\n  classes?: any;\r\n}\r\n\r\nconst TablePlaceholder = (props: TablePlaceholderProps) => {\r\n  const { primary, secondary, renderPlaceholder } = props;\r\n\r\n  return renderPlaceholder ? (\r\n    renderPlaceholder(props)\r\n  ) : (\r\n    <>\r\n      {primary && (\r\n        <Typography color='textSecondary' variant='subtitle1' style={{ padding: 16 }} align='center'>\r\n          {primary}\r\n        </Typography>\r\n      )}\r\n      {secondary && (\r\n        <Typography color='textSecondary' variant='body1' style={{ padding: 16 }} align='center'>\r\n          {secondary}\r\n        </Typography>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state: AppState, ownProp: TablePlaceholderProps): TablePlaceholderProps => {\r\n  const { name, placeholder } = ownProp;\r\n  const table = state.table[name];\r\n  const primary = ownProp.primary || `No ${name}`;\r\n  const secondary = ownProp.secondary || placeholder;\r\n  return {\r\n    ...ownProp,\r\n    tab: table && table.tab && table.tab,\r\n    primary,\r\n    secondary\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(TablePlaceholder as any) as any;\r\n","import * as React from 'react';\r\nimport * as Icons from '@material-ui/icons';\r\nimport { makeStyles, useTheme, Typography, Collapse, Checkbox, Grid, createStyles } from '@material-ui/core';\r\nimport MuiTable from 'mui-virtualized-table';\r\nimport AutoSizer from 'react-virtualized/dist/commonjs/AutoSizer';\r\nimport Component from '@reactions/component';\r\nimport classNames from 'classnames';\r\nimport * as TableStore from './store';\r\nimport { SortComparator } from './helpers';\r\nimport { evalFunc } from '../../../helpers';\r\n\r\nexport interface VirtualTableProps {\r\n  name?: string;\r\n  height?: number;\r\n  checkbox?: boolean;\r\n  hover?: boolean;\r\n  select?: boolean;\r\n  columns?: any[] | ((props?) => any[]);\r\n  data?: any[];\r\n  MultiSelectToolbar?: any;\r\n  rounded?: boolean;\r\n  rowHeight?: number;\r\n  includeHeaders?: boolean;\r\n  fixedRowCount?: number;\r\n  showScroll?: boolean;\r\n  rowDivider?: boolean;\r\n}\r\n\r\nconst gridStyle = {\r\n  border: 0,\r\n  'scrollbar-width': 'none' /* Firefox 64 */\r\n};\r\n\r\nconst sharedTableStyle = {\r\n  border: 0,\r\n  '& .topLeftGrid': gridStyle,\r\n  '& .topRightGrid': gridStyle,\r\n  '& .bottomLeftGrid': gridStyle\r\n};\r\n\r\nconst tableStyle = {\r\n  ...sharedTableStyle,\r\n  '& .bottomRightGrid': {\r\n    border: 0,\r\n    // Hide scrollbars on Chrome/Safari/IE\r\n    '&::-webkit-scrollbar': {\r\n      display: 'none'\r\n    },\r\n    'scrollbar-width': 'none' /* Firefox 64 */,\r\n    '-ms-overflow-style': 'none' as any,\r\n    '-webkit-overflow-scrolling': 'auto',\r\n    '&::-webkit-overflow-scrolling': 'auto'\r\n  }\r\n};\r\n\r\nexport const tableScrollStyle = ({ palette }) => ({\r\n  ...sharedTableStyle,\r\n  '& .bottomRightGrid': {\r\n    '&::-webkit-scrollbar': {\r\n      display: 'auto',\r\n      width: 6,\r\n      height: 6\r\n    },\r\n    '&::-webkit-scrollbar-thumb': {\r\n      // Works on chrome only\r\n      backgroundColor: palette.primary.light,\r\n      borderRadius: 25\r\n    },\r\n    border: 0,\r\n    '-ms-overflow-style': 'none' as any,\r\n    '-webkit-overflow-scrolling': 'auto',\r\n    '&::-webkit-overflow-scrolling': 'auto'\r\n  }\r\n});\r\n\r\nconst useStyles = makeStyles(({ palette, spacing, layout }: any) =>\r\n  createStyles({\r\n    table: {\r\n      ...tableStyle\r\n    },\r\n    tableRounded: {\r\n      borderBottomLeftRadius: 12,\r\n      borderBottomRightRadius: 12,\r\n      ...tableStyle\r\n    },\r\n    tableScroll: {\r\n      ...tableScrollStyle({ palette })\r\n    },\r\n    tableScrollRounded: {\r\n      borderBottomLeftRadius: 12,\r\n      borderBottomRightRadius: 12,\r\n      ...tableScrollStyle({ palette })\r\n    },\r\n    cellHovered: {\r\n      backgroundColor: palette.primary.light\r\n    },\r\n    cellSelected: {\r\n      color: palette.common.white + ' !important',\r\n      backgroundColor: palette.primary.main\r\n    },\r\n    checkbox: {\r\n      paddingLeft: 0,\r\n      paddingRight: 0\r\n    },\r\n    checkboxIcon: {\r\n      backgroundColor: palette.common.white\r\n    },\r\n    selectedHeader: {\r\n      paddingLeft: spacing(1),\r\n      paddingRight: spacing(1),\r\n      color: palette.common.white,\r\n      backgroundColor: palette.primary.main,\r\n      height: layout.multiselectbarheight,\r\n      marginBottom: layout.contentrowspacing\r\n    },\r\n    cell: {\r\n      //color: palette.secondary.main,\r\n    },\r\n    collapse: {\r\n      background: palette.grey[400]\r\n    }\r\n  })\r\n);\r\n\r\n//If a row data function exists, it returns the results of that, otherwise just the row id\r\nexport function getRowData(selectedRowIds, data) {\r\n  return selectedRowIds\r\n    .map(rid => data.find(d => d.id === rid))\r\n    .filter(row => row)\r\n    .map(row => (row.getRowData ? { ...row.getRowData(row) } : { id: row.id }));\r\n}\r\n\r\nexport default function VirtualTable(props: VirtualTableProps) {\r\n  const classes = useStyles(props);\r\n  const { layout } = useTheme();\r\n  const {\r\n    name,\r\n    includeHeaders = true,\r\n    fixedRowCount = 1,\r\n    rowHeight = layout.tableRowHeight,\r\n    rounded = false,\r\n    hover,\r\n    select,\r\n    checkbox,\r\n    data,\r\n    height,\r\n    columns,\r\n    MultiSelectToolbar,\r\n    showScroll = false,\r\n    rowDivider = true\r\n  } = props;\r\n\r\n  const table: TableStore.Table = TableStore.useTable(name);\r\n  const tableUpdate = TableStore.useTableUpdate();\r\n\r\n  const handleSort = (column, sort: SortComparator) => {\r\n    table &&\r\n      tableUpdate({\r\n        id: table.id,\r\n        orderBy: column,\r\n        orderDirection: table.orderDirection === 'asc' ? 'desc' : 'asc',\r\n        sortComparator: sort\r\n      });\r\n  };\r\n\r\n  const sortinjectedcolumns = evalFunc(columns, props).map(c => ({\r\n    ...c,\r\n    onHeaderClick: c.sort ? () => handleSort(c.name, c.sort) : undefined\r\n  })); //;== true && handleSort() }));\r\n  return (\r\n    <div style={{ height: height }}>\r\n      <Component initialState={{ selectedRowIds: [] }}>\r\n        {({ state, setState }) => {\r\n          const selectedRowIds = state.selectedRowIds;\r\n          const length = selectedRowIds.length;\r\n          const itemtxt = length === 0 ? '' : length === 1 ? length + ' item' : length + ' items';\r\n          const adjustedheight = length > 0 ? height - layout.multiselectbarheight - layout.contentrowspacing : height;\r\n          return (\r\n            <AutoSizer>\r\n              {({ width }) => (\r\n                <>\r\n                  <div style={{ width: width }}>\r\n                    <Collapse className={classes.collapse} in={length > 0}>\r\n                      <Grid className={classes.selectedHeader} container direction='row' justify='space-between' alignItems='center' spacing={0}>\r\n                        <Grid item xs zeroMinWidth>\r\n                          <Typography noWrap color='inherit' variant='h5'>\r\n                            {itemtxt}\r\n                          </Typography>\r\n                        </Grid>\r\n                        <Grid item xs>\r\n                          <Grid container justify='flex-end' alignItems='center' alignContent='center'>\r\n                            <Grid item>{length > 0 && MultiSelectToolbar && <MultiSelectToolbar rowData={getRowData(selectedRowIds, data)} />}</Grid>\r\n                          </Grid>\r\n                        </Grid>\r\n                      </Grid>\r\n                    </Collapse>\r\n                  </div>\r\n                  <MuiTable\r\n                    cellProps={{\r\n                      size: 'small',\r\n                      style: { paddingLeft: 16, paddingRight: 0, borderBottom: rowDivider === false ? 0 : undefined }\r\n                    }}\r\n                    classes={{\r\n                      table: showScroll\r\n                        ? classNames(classes.tableScroll, rounded && classes.tableScrollRounded)\r\n                        : classNames(classes.table, rounded && classes.tableRounded),\r\n                      cellHovered: classes.cellHovered,\r\n                      cellSelected: classes.cellSelected,\r\n                      cell: classes.cell\r\n                    }}\r\n                    fixedRowCount={fixedRowCount}\r\n                    width={width}\r\n                    height={adjustedheight}\r\n                    rowHeight={rowHeight}\r\n                    includeHeaders={includeHeaders}\r\n                    orderBy={table && table.orderBy}\r\n                    orderDirection={table ? table.orderDirection : 'asc'}\r\n                    data={data}\r\n                    columns={\r\n                      checkbox\r\n                        ? [\r\n                            {\r\n                              name: 'checkbox',\r\n                              header: (\r\n                                <Checkbox\r\n                                  checkedIcon={<Icons.CheckBox className={classes.checkboxIcon} color='primary' />}\r\n                                  indeterminateIcon={<Icons.IndeterminateCheckBox className={classes.checkboxIcon} color='primary' />}\r\n                                  checked={state.selectedRowIds.filter(rid => data.find(d => d.id === rid)).length > 0}\r\n                                  onChange={e =>\r\n                                    setState(prevState => {\r\n                                      if (prevState.selectedRowIds.filter(rid => data.find(d => d.id === rid)).length === data.length) {\r\n                                        // deselect all\r\n                                        return { selectedRowIds: [] };\r\n                                      } else {\r\n                                        // select all\r\n                                        return {\r\n                                          selectedRowIds: data.map(d => d.id)\r\n                                        };\r\n                                      }\r\n                                    })\r\n                                  }\r\n                                  {...(state.selectedRowIds.filter(rid => data.find(d => d.id === rid)).length > 0 &&\r\n                                    state.selectedRowIds.filter(rid => data.find(d => d.id === rid)).length !== data.length && {\r\n                                      indeterminate: true,\r\n                                      color: 'default'\r\n                                    })}\r\n                                />\r\n                              ),\r\n                              cell: rowData => (\r\n                                <Checkbox\r\n                                  checkedIcon={<Icons.CheckBox className={classes.checkboxIcon} color='primary' />}\r\n                                  checked={state.selectedRowIds.filter(rid => data.find(d => d.id === rid)).some(id => rowData.id === id)}\r\n                                />\r\n                              ),\r\n                              cellProps: {\r\n                                style: { paddingLeft: 8, paddingRight: 0 }\r\n                              },\r\n                              width: 48\r\n                            },\r\n                            ...sortinjectedcolumns\r\n                          ]\r\n                        : sortinjectedcolumns\r\n                    }\r\n                    isCellSelected={select ? (column, rowData) => state.selectedRowIds.some(id => rowData && rowData.id === id) : undefined}\r\n                    isCellHovered={\r\n                      hover ? (column, rowData, hoveredColumn, hoveredRowData) => rowData && rowData.id && rowData.id === hoveredRowData.id : undefined\r\n                    }\r\n                    onCellClick={\r\n                      select\r\n                        ? (event, { column, rowData }) => {\r\n                            setState(prevState => {\r\n                              if (prevState.selectedRowIds.some(id => rowData.id === id)) {\r\n                                // remove\r\n                                return {\r\n                                  selectedRowIds: prevState.selectedRowIds.filter(id => id !== rowData.id)\r\n                                };\r\n                              } else {\r\n                                // add\r\n                                return {\r\n                                  selectedRowIds: [...prevState.selectedRowIds, rowData.id]\r\n                                };\r\n                              }\r\n                            });\r\n                          }\r\n                        : undefined\r\n                    }\r\n                    style={{ backgroundColor: 'white' }}\r\n                  />\r\n                </>\r\n              )}\r\n            </AutoSizer>\r\n          );\r\n        }}\r\n      </Component>\r\n    </div>\r\n  );\r\n}\r\n","import * as React from 'react';\r\nimport { useTheme } from '@material-ui/core';\r\nimport AutoSizer from 'react-virtualized/dist/commonjs/AutoSizer';\r\nimport Component from '@reactions/component';\r\nimport { evalFunc } from '../../../helpers';\r\nimport { CellMeasurer, CellMeasurerCache, List } from 'react-virtualized';\r\n\r\nexport interface VirtualListProps {\r\n  name?: string;\r\n  height?: number;\r\n  columns?: any[] | ((props?) => any[]);\r\n  data?: any[];\r\n  rowHeight?: number;\r\n}\r\n\r\nexport default function VirtualList(props: VirtualListProps) {\r\n  const { layout } = useTheme();\r\n  const { rowHeight = layout.tableRowHeight, data, columns, height } = props;\r\n\r\n  const sortinjectedcolumns = evalFunc(columns, props);\r\n\r\n  return (\r\n    <div style={{ height: height }}>\r\n      <Component initialState={{ selectedRowIds: [] }}>\r\n        {({ state }) => {\r\n          const selectedRowIds = state.selectedRowIds;\r\n          const length = selectedRowIds.length;\r\n          const adjustedheight = length > 0 ? height - layout.multiselectbarheight - layout.contentrowspacing : height;\r\n          return (\r\n            <AutoSizer>\r\n              {({ width }) => <DynamicList data={data} rowHeight={rowHeight} width={width as any} height={adjustedheight} columns={sortinjectedcolumns} />}\r\n            </AutoSizer>\r\n          );\r\n        }}\r\n      </Component>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst DynamicList = props => {\r\n  const { height, width, data, columns, rowHeight = 50, getClassName } = props as any;\r\n\r\n  const handleRefresh = () => {\r\n    setCache(\r\n      new CellMeasurerCache({\r\n        fixedWidth: true,\r\n        minHeight: rowHeight\r\n      })\r\n    );\r\n  };\r\n\r\n  React.useEffect(() => {\r\n    setCache(\r\n      new CellMeasurerCache({\r\n        fixedWidth: true,\r\n        minHeight: rowHeight\r\n      })\r\n    );\r\n  }, [data, columns, getClassName, height, rowHeight, width]);\r\n\r\n  const [cache, setCache] = React.useState(\r\n    new CellMeasurerCache({\r\n      fixedWidth: true,\r\n      minHeight: props.rowHeight ?? 50\r\n    })\r\n  );\r\n\r\n  const _rowRenderer = ({ index, key, parent, style }) => {\r\n    const classNames = getClassName && getClassName({ columnIndex: 0, rowIndex: index });\r\n    return (\r\n      <CellMeasurer cache={cache} columnIndex={0} key={key} rowIndex={index} parent={parent}>\r\n        {({ measure, registerChild }) => (\r\n          <div ref={registerChild} className={classNames} style={style}>\r\n            {columns[0].cell({ ...data[index], handleRefresh }, columns[0])}\r\n          </div>\r\n        )}\r\n      </CellMeasurer>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <List\r\n      deferredMeasurementCache={cache}\r\n      height={height}\r\n      overscanRowCount={0}\r\n      rowCount={data.length}\r\n      rowHeight={cache.rowHeight}\r\n      rowRenderer={_rowRenderer}\r\n      width={width}\r\n    />\r\n  );\r\n};\r\n","import * as React from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { AppState } from '../../../store';\r\nimport TablePlaceHolder from './TablePlaceHolder';\r\nimport VirtualTable, { VirtualTableProps } from './VirtualTable';\r\nimport { Typography, Divider, useTheme, makeStyles, createStyles, Paper, Grid } from '@material-ui/core';\r\nimport VirtualList from './VirtualList';\r\n\r\nexport interface GenericTableProps extends VirtualTableProps {\r\n  footer?: boolean;\r\n  elevation?: number;\r\n  placeholder?: string | React.ReactNode;\r\n  selector?(state, props): [];\r\n  length?: number;\r\n  isList?: boolean;\r\n}\r\n\r\nconst useStyles = makeStyles(({ palette, spacing, layout }: any) =>\r\n  createStyles({\r\n    placeholder: {\r\n      padding: spacing(1),\r\n      background: palette.grey[50]\r\n    },\r\n    footer: {\r\n      paddingRight: spacing(1),\r\n      background: palette.grey[200],\r\n      border: 8,\r\n      height: layout.tablefooterheight,\r\n      color: palette.text.hint\r\n    },\r\n    paper: ({ rounded }: any) => ({\r\n      borderBottomLeftRadius: rounded ? 4 : 0,\r\n      borderBottomRightRadius: rounded ? 4 : 0\r\n    })\r\n  })\r\n);\r\n\r\nexport default function GenericTable(props: GenericTableProps) {\r\n  const { elevation = 4, placeholder, footer, name, selector, data: Data = [], height: Height, isList, ...other } = props;\r\n  const classes = useStyles(props);\r\n  const { layout } = useTheme();\r\n  const data = useSelector((state: AppState) => (selector ? selector(state, props) : Data));\r\n  const length = data && data.length ? data.length : 0;\r\n  const height = footer ? Height - layout.tablefooterheight : Height;\r\n\r\n  const VirtualComponent = isList ? VirtualList : VirtualTable;\r\n\r\n  return (\r\n    <Paper elevation={elevation} className={classes.paper}>\r\n      {length === 0 ? (\r\n        <Grid style={{ height: height }} container className={classes.placeholder} alignItems='center' justify='center'>\r\n          <Grid item xs>\r\n            <TablePlaceHolder {...props} />\r\n          </Grid>\r\n          <Grid item xs={12} />\r\n        </Grid>\r\n      ) : (\r\n        <VirtualComponent name={name} data={data} height={height} {...other} />\r\n      )}\r\n      {footer && (\r\n        <>\r\n          <Divider />\r\n          <Grid container className={classes.footer} alignContent='center' alignItems='center' justify='flex-end'>\r\n            <Grid item container alignItems='center' justify='flex-end'>\r\n              <Typography align='right' variant='caption'>\r\n                Viewing {length} {name}\r\n              </Typography>\r\n            </Grid>\r\n          </Grid>\r\n        </>\r\n      )}\r\n    </Paper>\r\n  );\r\n}\r\n"],"sourceRoot":""}